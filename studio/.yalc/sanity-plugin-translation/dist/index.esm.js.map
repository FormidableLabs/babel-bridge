{"version":3,"file":"index.esm.js","sources":["../src/const.ts","../src/hooks/usePostLocalesQuery.tsx","../src/hooks/useSupportedLanguagesQuery.tsx","../src/components/SupportedLanguages/hooks/useSupportedLanguages.tsx","../src/components/TranslationServiceProvider.tsx","../src/components/SanityDocumentInputComponent.tsx","../src/components/LocaleField.tsx","../src/components/DefaultLanguage.tsx","../src/actions/TranslationServiceAction.tsx","../src/schemas/localeBlockContent.ts","../src/schemas/localeTitle.ts","../src/schemas/supportedLanguages.ts","../src/schemas/index.ts","../src/index.ts"],"sourcesContent":["export const DEFAULT_CONFIG = {\n  apiKey: '',\n  apiVersion: new Date().toISOString().split('T')[0],\n  schemaTypes: [],\n}\n\ntype Locale = {\n  name: string\n  native: string\n  default?: boolean\n}\n\nexport const LOCALES: Record<string, Locale> = {\n  'zh-CN': {\n    name: 'Chinese (China)',\n    native: '中文(中国)',\n  },\n  'zh-TW': {\n    name: 'Chinese (Traditional, Taiwan)',\n    native: '中文（繁體，台灣）',\n  },\n  af: {\n    name: 'Afrikaans',\n    native: 'Afrikaans',\n  },\n  'af-NA': {\n    name: 'Afrikaans (Namibia)',\n    native: 'Afrikaans (Namibië)',\n  },\n  'af-ZA': {\n    name: 'Afrikaans (South Africa)',\n    native: 'Afrikaans (Suid-Afrika)',\n  },\n  agq: {\n    name: 'Aghem',\n    native: 'Aghem',\n  },\n  'agq-CM': {\n    name: 'Aghem (Cameroon)',\n    native: 'Aghem (Kàmàlûŋ)',\n  },\n  ak: {\n    name: 'Akan',\n    native: 'Akan',\n  },\n  'ak-GH': {\n    name: 'Akan (Ghana)',\n    native: 'Akan (Gaana)',\n  },\n  am: {\n    name: 'Amharic',\n    native: 'አማርኛ',\n  },\n  'am-ET': {\n    name: 'Amharic (Ethiopia)',\n    native: 'አማርኛ (ኢትዮጵያ)',\n  },\n  ar: {\n    name: 'Arabic',\n    native: 'العربية',\n  },\n  'ar-001': {\n    name: 'Arabic (World)',\n    native: 'العربية (العالم)',\n  },\n  'ar-AE': {\n    name: 'Arabic (United Arab Emirates)',\n    native: 'العربية (الإمارات العربية المتحدة)',\n  },\n  'ar-BH': {\n    name: 'Arabic (Bahrain)',\n    native: 'العربية (البحرين)',\n  },\n  'ar-DJ': {\n    name: 'Arabic (Djibouti)',\n    native: 'العربية (جيبوتي)',\n  },\n  'ar-DZ': {\n    name: 'Arabic (Algeria)',\n    native: 'العربية (الجزائر)',\n  },\n  'ar-EG': {\n    name: 'Arabic (Egypt)',\n    native: 'العربية (مصر)',\n  },\n  'ar-EH': {\n    name: 'Arabic (Western Sahara)',\n    native: 'العربية (الصحراء الغربية)',\n  },\n  'ar-ER': {\n    name: 'Arabic (Eritrea)',\n    native: 'العربية (إريتريا)',\n  },\n  'ar-IL': {\n    name: 'Arabic (Israel)',\n    native: 'العربية (إسرائيل)',\n  },\n  'ar-IQ': {\n    name: 'Arabic (Iraq)',\n    native: 'العربية (العراق)',\n  },\n  'ar-JO': {\n    name: 'Arabic (Jordan)',\n    native: 'العربية (الأردن)',\n  },\n  'ar-KM': {\n    name: 'Arabic (Comoros)',\n    native: 'العربية (جزر القمر)',\n  },\n  'ar-KW': {\n    name: 'Arabic (Kuwait)',\n    native: 'العربية (الكويت)',\n  },\n  'ar-LB': {\n    name: 'Arabic (Lebanon)',\n    native: 'العربية (لبنان)',\n  },\n  'ar-LY': {\n    name: 'Arabic (Libya)',\n    native: 'العربية (ليبيا)',\n  },\n  'ar-MA': {\n    name: 'Arabic (Morocco)',\n    native: 'العربية (المغرب)',\n  },\n  'ar-MR': {\n    name: 'Arabic (Mauritania)',\n    native: 'العربية (موريتانيا)',\n  },\n  'ar-OM': {\n    name: 'Arabic (Oman)',\n    native: 'العربية (عُمان)',\n  },\n  'ar-PS': {\n    name: 'Arabic (Palestinian Territories)',\n    native: 'العربية (الأراضي الفلسطينية)',\n  },\n  'ar-QA': {\n    name: 'Arabic (Qatar)',\n    native: 'العربية (قطر)',\n  },\n  'ar-SA': {\n    name: 'Arabic (Saudi Arabia)',\n    native: 'العربية (المملكة العربية السعودية)',\n  },\n  'ar-SD': {\n    name: 'Arabic (Sudan)',\n    native: 'العربية (السودان)',\n  },\n  'ar-SO': {\n    name: 'Arabic (Somalia)',\n    native: 'العربية (الصومال)',\n  },\n  'ar-SS': {\n    name: 'Arabic (South Sudan)',\n    native: 'العربية (جنوب السودان)',\n  },\n  'ar-SY': {\n    name: 'Arabic (Syria)',\n    native: 'العربية (سوريا)',\n  },\n  'ar-TD': {\n    name: 'Arabic (Chad)',\n    native: 'العربية (تشاد)',\n  },\n  'ar-TN': {\n    name: 'Arabic (Tunisia)',\n    native: 'العربية (تونس)',\n  },\n  'ar-YE': {\n    name: 'Arabic (Yemen)',\n    native: 'العربية (اليمن)',\n  },\n  as: {\n    name: 'Assamese',\n    native: 'অসমীয়া',\n  },\n  'as-IN': {\n    name: 'Assamese (India)',\n    native: 'অসমীয়া (ভারত)',\n  },\n  asa: {\n    name: 'Asu',\n    native: 'Kipare',\n  },\n  'asa-TZ': {\n    name: 'Asu (Tanzania)',\n    native: 'Kipare (Tadhania)',\n  },\n  ast: {\n    name: 'Asturian',\n    native: 'asturianu',\n  },\n  'ast-ES': {\n    name: 'Asturian (Spain)',\n    native: 'asturianu (España)',\n  },\n  az: {\n    name: 'Azerbaijani',\n    native: 'azərbaycan',\n  },\n  'az-Cyrl': {\n    name: 'Azerbaijani (Cyrillic)',\n    native: 'азәрбајҹан (Кирил)',\n  },\n  'az-Cyrl-AZ': {\n    name: 'Azerbaijani (Cyrillic, Azerbaijan)',\n    native: 'азәрбајҹан (Кирил, Азәрбајҹан)',\n  },\n  'az-Latn': {\n    name: 'Azerbaijani (Latin)',\n    native: 'azərbaycan (latın)',\n  },\n  'az-Latn-AZ': {\n    name: 'Azerbaijani (Latin, Azerbaijan)',\n    native: 'azərbaycan (latın, Azərbaycan)',\n  },\n  bas: {\n    name: 'Basaa',\n    native: 'Ɓàsàa',\n  },\n  'bas-CM': {\n    name: 'Basaa (Cameroon)',\n    native: 'Ɓàsàa (Kàmɛ̀rûn)',\n  },\n  be: {\n    name: 'Belarusian',\n    native: 'беларуская',\n  },\n  'be-BY': {\n    name: 'Belarusian (Belarus)',\n    native: 'беларуская (Беларусь)',\n  },\n  bem: {\n    name: 'Bemba',\n    native: 'Ichibemba',\n  },\n  'bem-ZM': {\n    name: 'Bemba (Zambia)',\n    native: 'Ichibemba (Zambia)',\n  },\n  bez: {\n    name: 'Bena',\n    native: 'Hibena',\n  },\n  'bez-TZ': {\n    name: 'Bena (Tanzania)',\n    native: 'Hibena (Hutanzania)',\n  },\n  bg: {\n    name: 'Bulgarian',\n    native: 'български',\n  },\n  'bg-BG': {\n    name: 'Bulgarian (Bulgaria)',\n    native: 'български (България)',\n  },\n  bm: {\n    name: 'Bambara',\n    native: 'bamanakan',\n  },\n  'bm-ML': {\n    name: 'Bambara (Mali)',\n    native: 'bamanakan (Mali)',\n  },\n  bn: {\n    name: 'Bangla',\n    native: 'বাংলা',\n  },\n  'bn-BD': {\n    name: 'Bangla (Bangladesh)',\n    native: 'বাংলা (বাংলাদেশ)',\n  },\n  'bn-IN': {\n    name: 'Bangla (India)',\n    native: 'বাংলা (ভারত)',\n  },\n  bo: {\n    name: 'Tibetan',\n    native: 'བོད་སྐད་',\n  },\n  'bo-CN': {\n    name: 'Tibetan (China)',\n    native: 'བོད་སྐད་ (རྒྱ་ནག)',\n  },\n  'bo-IN': {\n    name: 'Tibetan (India)',\n    native: 'བོད་སྐད་ (རྒྱ་གར་)',\n  },\n  br: {\n    name: 'Breton',\n    native: 'brezhoneg',\n  },\n  'br-FR': {\n    name: 'Breton (France)',\n    native: 'brezhoneg (Frañs)',\n  },\n  brx: {\n    name: 'Bodo',\n    native: 'बड़ो',\n  },\n  'brx-IN': {\n    name: 'Bodo (India)',\n    native: 'बड़ो (भारत)',\n  },\n  bs: {\n    name: 'Bosnian',\n    native: 'bosanski',\n  },\n  'bs-Cyrl': {\n    name: 'Bosnian (Cyrillic)',\n    native: 'босански (ћирилица)',\n  },\n  'bs-Cyrl-BA': {\n    name: 'Bosnian (Cyrillic, Bosnia & Herzegovina)',\n    native: 'босански (ћирилица, Босна и Херцеговина)',\n  },\n  'bs-Latn': {\n    name: 'Bosnian (Latin)',\n    native: 'bosanski (latinica)',\n  },\n  'bs-Latn-BA': {\n    name: 'Bosnian (Latin, Bosnia & Herzegovina)',\n    native: 'bosanski (latinica, Bosna i Hercegovina)',\n  },\n  ca: {\n    name: 'Catalan',\n    native: 'català',\n  },\n  'ca-AD': {\n    name: 'Catalan (Andorra)',\n    native: 'català (Andorra)',\n  },\n  'ca-ES': {\n    name: 'Catalan (Spain)',\n    native: 'català (Espanya)',\n  },\n  'ca-FR': {\n    name: 'Catalan (France)',\n    native: 'català (França)',\n  },\n  'ca-IT': {\n    name: 'Catalan (Italy)',\n    native: 'català (Itàlia)',\n  },\n  ccp: {\n    name: 'Chakma',\n    native: '𑄌𑄋𑄴𑄟𑄳𑄦',\n  },\n  'ccp-BD': {\n    name: 'Chakma (Bangladesh)',\n    native: '𑄌𑄋𑄴𑄟𑄳𑄦 (𑄝𑄁𑄣𑄘𑄬𑄌𑄴)',\n  },\n  'ccp-IN': {\n    name: 'Chakma (India)',\n    native: '𑄌𑄋𑄴𑄟𑄳𑄦 (𑄞𑄢𑄧𑄖𑄴)',\n  },\n  ce: {\n    name: 'Chechen',\n    native: 'нохчийн',\n  },\n  'ce-RU': {\n    name: 'Chechen (Russia)',\n    native: 'нохчийн (Росси)',\n  },\n  cgg: {\n    name: 'Chiga',\n    native: 'Rukiga',\n  },\n  'cgg-UG': {\n    name: 'Chiga (Uganda)',\n    native: 'Rukiga (Uganda)',\n  },\n  chr: {\n    name: 'Cherokee',\n    native: 'ᏣᎳᎩ',\n  },\n  'chr-US': {\n    name: 'Cherokee (United States)',\n    native: 'ᏣᎳᎩ (ᏌᏊ ᎢᏳᎾᎵᏍᏔᏅ ᏍᎦᏚᎩ)',\n  },\n  ckb: {\n    name: 'Central Kurdish',\n    native: 'کوردیی ناوەندی',\n  },\n  'ckb-IQ': {\n    name: 'Central Kurdish (Iraq)',\n    native: 'کوردیی ناوەندی (عێراق)',\n  },\n  'ckb-IR': {\n    name: 'Central Kurdish (Iran)',\n    native: 'کوردیی ناوەندی (ئێران)',\n  },\n  cs: {\n    name: 'Czech',\n    native: 'čeština',\n  },\n  'cs-CZ': {\n    name: 'Czech (Czechia)',\n    native: 'čeština (Česko)',\n  },\n  cy: {\n    name: 'Welsh',\n    native: 'Cymraeg',\n  },\n  'cy-GB': {\n    name: 'Welsh (United Kingdom)',\n    native: 'Cymraeg (Y Deyrnas Unedig)',\n  },\n  da: {\n    name: 'Danish',\n    native: 'dansk',\n  },\n  'da-DK': {\n    name: 'Danish (Denmark)',\n    native: 'dansk (Danmark)',\n  },\n  'da-GL': {\n    name: 'Danish (Greenland)',\n    native: 'dansk (Grønland)',\n  },\n  dav: {\n    name: 'Taita',\n    native: 'Kitaita',\n  },\n  'dav-KE': {\n    name: 'Taita (Kenya)',\n    native: 'Kitaita (Kenya)',\n  },\n  de: {\n    name: 'German',\n    native: 'Deutsch',\n  },\n  'de-AT': {\n    name: 'German (Austria)',\n    native: 'Deutsch (Österreich)',\n  },\n  'de-BE': {\n    name: 'German (Belgium)',\n    native: 'Deutsch (Belgien)',\n  },\n  'de-CH': {\n    name: 'German (Switzerland)',\n    native: 'Deutsch (Schweiz)',\n  },\n  'de-DE': {\n    name: 'German (Germany)',\n    native: 'Deutsch (Deutschland)',\n  },\n  'de-IT': {\n    name: 'German (Italy)',\n    native: 'Deutsch (Italien)',\n  },\n  'de-LI': {\n    name: 'German (Liechtenstein)',\n    native: 'Deutsch (Liechtenstein)',\n  },\n  'de-LU': {\n    name: 'German (Luxembourg)',\n    native: 'Deutsch (Luxemburg)',\n  },\n  dje: {\n    name: 'Zarma',\n    native: 'Zarmaciine',\n  },\n  'dje-NE': {\n    name: 'Zarma (Niger)',\n    native: 'Zarmaciine (Nižer)',\n  },\n  dsb: {\n    name: 'Lower Sorbian',\n    native: 'dolnoserbšćina',\n  },\n  'dsb-DE': {\n    name: 'Lower Sorbian (Germany)',\n    native: 'dolnoserbšćina (Nimska)',\n  },\n  dua: {\n    name: 'Duala',\n    native: 'duálá',\n  },\n  'dua-CM': {\n    name: 'Duala (Cameroon)',\n    native: 'duálá (Cameroun)',\n  },\n  dyo: {\n    name: 'Jola-Fonyi',\n    native: 'joola',\n  },\n  'dyo-SN': {\n    name: 'Jola-Fonyi (Senegal)',\n    native: 'joola (Senegal)',\n  },\n  dz: {\n    name: 'Dzongkha',\n    native: 'རྫོང་ཁ',\n  },\n  'dz-BT': {\n    name: 'Dzongkha (Bhutan)',\n    native: 'རྫོང་ཁ། (འབྲུག།)',\n  },\n  ebu: {\n    name: 'Embu',\n    native: 'Kĩembu',\n  },\n  'ebu-KE': {\n    name: 'Embu (Kenya)',\n    native: 'Kĩembu (Kenya)',\n  },\n  ee: {\n    name: 'Ewe',\n    native: 'Eʋegbe',\n  },\n  'ee-GH': {\n    name: 'Ewe (Ghana)',\n    native: 'Eʋegbe (Ghana nutome)',\n  },\n  'ee-TG': {\n    name: 'Ewe (Togo)',\n    native: 'Eʋegbe (Togo nutome)',\n  },\n  el: {\n    name: 'Greek',\n    native: 'Ελληνικά',\n  },\n  'el-CY': {\n    name: 'Greek (Cyprus)',\n    native: 'Ελληνικά (Κύπρος)',\n  },\n  'el-GR': {\n    name: 'Greek (Greece)',\n    native: 'Ελληνικά (Ελλάδα)',\n  },\n  en: {\n    name: 'English',\n    native: 'English',\n  },\n  'en-001': {\n    name: 'English (World)',\n    native: 'English (World)',\n  },\n  'en-150': {\n    name: 'English (Europe)',\n    native: 'English (Europe)',\n  },\n  'en-AG': {\n    name: 'English (Antigua & Barbuda)',\n    native: 'English (Antigua & Barbuda)',\n  },\n  'en-AI': {\n    name: 'English (Anguilla)',\n    native: 'English (Anguilla)',\n  },\n  'en-AS': {\n    name: 'English (American Samoa)',\n    native: 'English (American Samoa)',\n  },\n  'en-AT': {\n    name: 'English (Austria)',\n    native: 'English (Austria)',\n  },\n  'en-AU': {\n    name: 'English (Australia)',\n    native: 'English (Australia)',\n  },\n  'en-BB': {\n    name: 'English (Barbados)',\n    native: 'English (Barbados)',\n  },\n  'en-BE': {\n    name: 'English (Belgium)',\n    native: 'English (Belgium)',\n  },\n  'en-BI': {\n    name: 'English (Burundi)',\n    native: 'English (Burundi)',\n  },\n  'en-BM': {\n    name: 'English (Bermuda)',\n    native: 'English (Bermuda)',\n  },\n  'en-BS': {\n    name: 'English (Bahamas)',\n    native: 'English (Bahamas)',\n  },\n  'en-BW': {\n    name: 'English (Botswana)',\n    native: 'English (Botswana)',\n  },\n  'en-BZ': {\n    name: 'English (Belize)',\n    native: 'English (Belize)',\n  },\n  'en-CA': {\n    name: 'English (Canada)',\n    native: 'English (Canada)',\n  },\n  'en-CC': {\n    name: 'English (Cocos [Keeling] Islands)',\n    native: 'English (Cocos [Keeling] Islands)',\n  },\n  'en-CH': {\n    name: 'English (Switzerland)',\n    native: 'English (Switzerland)',\n  },\n  'en-CK': {\n    name: 'English (Cook Islands)',\n    native: 'English (Cook Islands)',\n  },\n  'en-CM': {\n    name: 'English (Cameroon)',\n    native: 'English (Cameroon)',\n  },\n  'en-CX': {\n    name: 'English (Christmas Island)',\n    native: 'English (Christmas Island)',\n  },\n  'en-CY': {\n    name: 'English (Cyprus)',\n    native: 'English (Cyprus)',\n  },\n  'en-DE': {\n    name: 'English (Germany)',\n    native: 'English (Germany)',\n  },\n  'en-DG': {\n    name: 'English (Diego Garcia)',\n    native: 'English (Diego Garcia)',\n  },\n  'en-DK': {\n    name: 'English (Denmark)',\n    native: 'English (Denmark)',\n  },\n  'en-DM': {\n    name: 'English (Dominica)',\n    native: 'English (Dominica)',\n  },\n  'en-ER': {\n    name: 'English (Eritrea)',\n    native: 'English (Eritrea)',\n  },\n  'en-FI': {\n    name: 'English (Finland)',\n    native: 'English (Finland)',\n  },\n  'en-FJ': {\n    name: 'English (Fiji)',\n    native: 'English (Fiji)',\n  },\n  'en-FK': {\n    name: 'English (Falkland Islands)',\n    native: 'English (Falkland Islands)',\n  },\n  'en-FM': {\n    name: 'English (Micronesia)',\n    native: 'English (Micronesia)',\n  },\n  'en-GB': {\n    name: 'English (United Kingdom)',\n    native: 'English (United Kingdom)',\n  },\n  'en-GD': {\n    name: 'English (Grenada)',\n    native: 'English (Grenada)',\n  },\n  'en-GG': {\n    name: 'English (Guernsey)',\n    native: 'English (Guernsey)',\n  },\n  'en-GH': {\n    name: 'English (Ghana)',\n    native: 'English (Ghana)',\n  },\n  'en-GI': {\n    name: 'English (Gibraltar)',\n    native: 'English (Gibraltar)',\n  },\n  'en-GM': {\n    name: 'English (Gambia)',\n    native: 'English (Gambia)',\n  },\n  'en-GU': {\n    name: 'English (Guam)',\n    native: 'English (Guam)',\n  },\n  'en-GY': {\n    name: 'English (Guyana)',\n    native: 'English (Guyana)',\n  },\n  'en-HK': {\n    name: 'English (Hong Kong SAR China)',\n    native: 'English (Hong Kong SAR China)',\n  },\n  'en-IE': {\n    name: 'English (Ireland)',\n    native: 'English (Ireland)',\n  },\n  'en-IL': {\n    name: 'English (Israel)',\n    native: 'English (Israel)',\n  },\n  'en-IM': {\n    name: 'English (Isle of Man)',\n    native: 'English (Isle of Man)',\n  },\n  'en-IN': {\n    name: 'English (India)',\n    native: 'English (India)',\n  },\n  'en-IO': {\n    name: 'English (British Indian Ocean Territory)',\n    native: 'English (British Indian Ocean Territory)',\n  },\n  'en-JE': {\n    name: 'English (Jersey)',\n    native: 'English (Jersey)',\n  },\n  'en-JM': {\n    name: 'English (Jamaica)',\n    native: 'English (Jamaica)',\n  },\n  'en-KE': {\n    name: 'English (Kenya)',\n    native: 'English (Kenya)',\n  },\n  'en-KI': {\n    name: 'English (Kiribati)',\n    native: 'English (Kiribati)',\n  },\n  'en-KN': {\n    name: 'English (St. Kitts & Nevis)',\n    native: 'English (St. Kitts & Nevis)',\n  },\n  'en-KY': {\n    name: 'English (Cayman Islands)',\n    native: 'English (Cayman Islands)',\n  },\n  'en-LC': {\n    name: 'English (St. Lucia)',\n    native: 'English (St. Lucia)',\n  },\n  'en-LR': {\n    name: 'English (Liberia)',\n    native: 'English (Liberia)',\n  },\n  'en-LS': {\n    name: 'English (Lesotho)',\n    native: 'English (Lesotho)',\n  },\n  'en-MG': {\n    name: 'English (Madagascar)',\n    native: 'English (Madagascar)',\n  },\n  'en-MH': {\n    name: 'English (Marshall Islands)',\n    native: 'English (Marshall Islands)',\n  },\n  'en-MO': {\n    name: 'English (Macau SAR China)',\n    native: 'English (Macau SAR China)',\n  },\n  'en-MP': {\n    name: 'English (Northern Mariana Islands)',\n    native: 'English (Northern Mariana Islands)',\n  },\n  'en-MS': {\n    name: 'English (Montserrat)',\n    native: 'English (Montserrat)',\n  },\n  'en-MT': {\n    name: 'English (Malta)',\n    native: 'English (Malta)',\n  },\n  'en-MU': {\n    name: 'English (Mauritius)',\n    native: 'English (Mauritius)',\n  },\n  'en-MW': {\n    name: 'English (Malawi)',\n    native: 'English (Malawi)',\n  },\n  'en-MY': {\n    name: 'English (Malaysia)',\n    native: 'English (Malaysia)',\n  },\n  'en-NA': {\n    name: 'English (Namibia)',\n    native: 'English (Namibia)',\n  },\n  'en-NF': {\n    name: 'English (Norfolk Island)',\n    native: 'English (Norfolk Island)',\n  },\n  'en-NG': {\n    name: 'English (Nigeria)',\n    native: 'English (Nigeria)',\n  },\n  'en-NL': {\n    name: 'English (Netherlands)',\n    native: 'English (Netherlands)',\n  },\n  'en-NR': {\n    name: 'English (Nauru)',\n    native: 'English (Nauru)',\n  },\n  'en-NU': {\n    name: 'English (Niue)',\n    native: 'English (Niue)',\n  },\n  'en-NZ': {\n    name: 'English (New Zealand)',\n    native: 'English (New Zealand)',\n  },\n  'en-PG': {\n    name: 'English (Papua New Guinea)',\n    native: 'English (Papua New Guinea)',\n  },\n  'en-PH': {\n    name: 'English (Philippines)',\n    native: 'English (Philippines)',\n  },\n  'en-PK': {\n    name: 'English (Pakistan)',\n    native: 'English (Pakistan)',\n  },\n  'en-PN': {\n    name: 'English (Pitcairn Islands)',\n    native: 'English (Pitcairn Islands)',\n  },\n  'en-PR': {\n    name: 'English (Puerto Rico)',\n    native: 'English (Puerto Rico)',\n  },\n  'en-PW': {\n    name: 'English (Palau)',\n    native: 'English (Palau)',\n  },\n  'en-RW': {\n    name: 'English (Rwanda)',\n    native: 'English (Rwanda)',\n  },\n  'en-SB': {\n    name: 'English (Solomon Islands)',\n    native: 'English (Solomon Islands)',\n  },\n  'en-SC': {\n    name: 'English (Seychelles)',\n    native: 'English (Seychelles)',\n  },\n  'en-SD': {\n    name: 'English (Sudan)',\n    native: 'English (Sudan)',\n  },\n  'en-SE': {\n    name: 'English (Sweden)',\n    native: 'English (Sweden)',\n  },\n  'en-SG': {\n    name: 'English (Singapore)',\n    native: 'English (Singapore)',\n  },\n  'en-SH': {\n    name: 'English (St. Helena)',\n    native: 'English (St. Helena)',\n  },\n  'en-SI': {\n    name: 'English (Slovenia)',\n    native: 'English (Slovenia)',\n  },\n  'en-SL': {\n    name: 'English (Sierra Leone)',\n    native: 'English (Sierra Leone)',\n  },\n  'en-SS': {\n    name: 'English (South Sudan)',\n    native: 'English (South Sudan)',\n  },\n  'en-SX': {\n    name: 'English (Sint Maarten)',\n    native: 'English (Sint Maarten)',\n  },\n  'en-SZ': {\n    name: 'English (Swaziland)',\n    native: 'English (Swaziland)',\n  },\n  'en-TC': {\n    name: 'English (Turks & Caicos Islands)',\n    native: 'English (Turks & Caicos Islands)',\n  },\n  'en-TK': {\n    name: 'English (Tokelau)',\n    native: 'English (Tokelau)',\n  },\n  'en-TO': {\n    name: 'English (Tonga)',\n    native: 'English (Tonga)',\n  },\n  'en-TT': {\n    name: 'English (Trinidad & Tobago)',\n    native: 'English (Trinidad & Tobago)',\n  },\n  'en-TV': {\n    name: 'English (Tuvalu)',\n    native: 'English (Tuvalu)',\n  },\n  'en-TZ': {\n    name: 'English (Tanzania)',\n    native: 'English (Tanzania)',\n  },\n  'en-UG': {\n    name: 'English (Uganda)',\n    native: 'English (Uganda)',\n  },\n  'en-UM': {\n    name: 'English (U.S. Outlying Islands)',\n    native: 'English (U.S. Outlying Islands)',\n  },\n  'en-US': {\n    name: 'English (United States)',\n    native: 'English (United States)',\n    default: true,\n  },\n  'en-US-POSIX': {\n    name: 'English (United States, Computer)',\n    native: 'English (United States, Computer)',\n  },\n  'en-VC': {\n    name: 'English (St. Vincent & Grenadines)',\n    native: 'English (St. Vincent & Grenadines)',\n  },\n  'en-VG': {\n    name: 'English (British Virgin Islands)',\n    native: 'English (British Virgin Islands)',\n  },\n  'en-VI': {\n    name: 'English (U.S. Virgin Islands)',\n    native: 'English (U.S. Virgin Islands)',\n  },\n  'en-VU': {\n    name: 'English (Vanuatu)',\n    native: 'English (Vanuatu)',\n  },\n  'en-WS': {\n    name: 'English (Samoa)',\n    native: 'English (Samoa)',\n  },\n  'en-ZA': {\n    name: 'English (South Africa)',\n    native: 'English (South Africa)',\n  },\n  'en-ZM': {\n    name: 'English (Zambia)',\n    native: 'English (Zambia)',\n  },\n  'en-ZW': {\n    name: 'English (Zimbabwe)',\n    native: 'English (Zimbabwe)',\n  },\n  eo: {\n    name: 'Esperanto',\n    native: 'esperanto',\n  },\n  es: {\n    name: 'Spanish',\n    native: 'español',\n  },\n  'es-419': {\n    name: 'Spanish (Latin America)',\n    native: 'español (Latinoamérica)',\n  },\n  'es-AR': {\n    name: 'Spanish (Argentina)',\n    native: 'español (Argentina)',\n  },\n  'es-BO': {\n    name: 'Spanish (Bolivia)',\n    native: 'español (Bolivia)',\n  },\n  'es-BR': {\n    name: 'Spanish (Brazil)',\n    native: 'español (Brasil)',\n  },\n  'es-BZ': {\n    name: 'Spanish (Belize)',\n    native: 'español (Belice)',\n  },\n  'es-CL': {\n    name: 'Spanish (Chile)',\n    native: 'español (Chile)',\n  },\n  'es-CO': {\n    name: 'Spanish (Colombia)',\n    native: 'español (Colombia)',\n  },\n  'es-CR': {\n    name: 'Spanish (Costa Rica)',\n    native: 'español (Costa Rica)',\n  },\n  'es-CU': {\n    name: 'Spanish (Cuba)',\n    native: 'español (Cuba)',\n  },\n  'es-DO': {\n    name: 'Spanish (Dominican Republic)',\n    native: 'español (República Dominicana)',\n  },\n  'es-EA': {\n    name: 'Spanish (Ceuta & Melilla)',\n    native: 'español (Ceuta y Melilla)',\n  },\n  'es-EC': {\n    name: 'Spanish (Ecuador)',\n    native: 'español (Ecuador)',\n  },\n  'es-ES': {\n    name: 'Spanish (Spain)',\n    native: 'español (España)',\n  },\n  'es-GQ': {\n    name: 'Spanish (Equatorial Guinea)',\n    native: 'español (Guinea Ecuatorial)',\n  },\n  'es-GT': {\n    name: 'Spanish (Guatemala)',\n    native: 'español (Guatemala)',\n  },\n  'es-HN': {\n    name: 'Spanish (Honduras)',\n    native: 'español (Honduras)',\n  },\n  'es-IC': {\n    name: 'Spanish (Canary Islands)',\n    native: 'español (Canarias)',\n  },\n  'es-MX': {\n    name: 'Spanish (Mexico)',\n    native: 'español (México)',\n  },\n  'es-NI': {\n    name: 'Spanish (Nicaragua)',\n    native: 'español (Nicaragua)',\n  },\n  'es-PA': {\n    name: 'Spanish (Panama)',\n    native: 'español (Panamá)',\n  },\n  'es-PE': {\n    name: 'Spanish (Peru)',\n    native: 'español (Perú)',\n  },\n  'es-PH': {\n    name: 'Spanish (Philippines)',\n    native: 'español (Filipinas)',\n  },\n  'es-PR': {\n    name: 'Spanish (Puerto Rico)',\n    native: 'español (Puerto Rico)',\n  },\n  'es-PY': {\n    name: 'Spanish (Paraguay)',\n    native: 'español (Paraguay)',\n  },\n  'es-SV': {\n    name: 'Spanish (El Salvador)',\n    native: 'español (El Salvador)',\n  },\n  'es-US': {\n    name: 'Spanish (United States)',\n    native: 'español (Estados Unidos)',\n  },\n  'es-UY': {\n    name: 'Spanish (Uruguay)',\n    native: 'español (Uruguay)',\n  },\n  'es-VE': {\n    name: 'Spanish (Venezuela)',\n    native: 'español (Venezuela)',\n  },\n  et: {\n    name: 'Estonian',\n    native: 'eesti',\n  },\n  'et-EE': {\n    name: 'Estonian (Estonia)',\n    native: 'eesti (Eesti)',\n  },\n  eu: {\n    name: 'Basque',\n    native: 'euskara',\n  },\n  'eu-ES': {\n    name: 'Basque (Spain)',\n    native: 'euskara (Espainia)',\n  },\n  ewo: {\n    name: 'Ewondo',\n    native: 'ewondo',\n  },\n  'ewo-CM': {\n    name: 'Ewondo (Cameroon)',\n    native: 'ewondo (Kamərún)',\n  },\n  fa: {\n    name: 'Persian',\n    native: 'فارسی',\n  },\n  'fa-AF': {\n    name: 'Persian (Afghanistan)',\n    native: 'فارسی (افغانستان)',\n  },\n  'fa-IR': {\n    name: 'Persian (Iran)',\n    native: 'فارسی (ایران)',\n  },\n  ff: {\n    name: 'Fulah',\n    native: 'Pulaar',\n  },\n  'ff-CM': {\n    name: 'Fulah (Cameroon)',\n    native: 'Pulaar (Kameruun)',\n  },\n  'ff-GN': {\n    name: 'Fulah (Guinea)',\n    native: 'Pulaar (Gine)',\n  },\n  'ff-MR': {\n    name: 'Fulah (Mauritania)',\n    native: 'Pulaar (Muritani)',\n  },\n  'ff-SN': {\n    name: 'Fulah (Senegal)',\n    native: 'Pulaar (Senegaal)',\n  },\n  fi: {\n    name: 'Finnish',\n    native: 'suomi',\n  },\n  'fi-FI': {\n    name: 'Finnish (Finland)',\n    native: 'suomi (Suomi)',\n  },\n  fil: {\n    name: 'Filipino',\n    native: 'Filipino',\n  },\n  'fil-PH': {\n    name: 'Filipino (Philippines)',\n    native: 'Filipino (Pilipinas)',\n  },\n  fo: {\n    name: 'Faroese',\n    native: 'føroyskt',\n  },\n  'fo-DK': {\n    name: 'Faroese (Denmark)',\n    native: 'føroyskt (Danmark)',\n  },\n  'fo-FO': {\n    name: 'Faroese (Faroe Islands)',\n    native: 'føroyskt (Føroyar)',\n  },\n  fr: {\n    name: 'French',\n    native: 'français',\n  },\n  'fr-BE': {\n    name: 'French (Belgium)',\n    native: 'français (Belgique)',\n  },\n  'fr-BF': {\n    name: 'French (Burkina Faso)',\n    native: 'français (Burkina Faso)',\n  },\n  'fr-BI': {\n    name: 'French (Burundi)',\n    native: 'français (Burundi)',\n  },\n  'fr-BJ': {\n    name: 'French (Benin)',\n    native: 'français (Bénin)',\n  },\n  'fr-BL': {\n    name: 'French (St. Barthélemy)',\n    native: 'français (Saint-Barthélemy)',\n  },\n  'fr-CA': {\n    name: 'French (Canada)',\n    native: 'français (Canada)',\n  },\n  'fr-CD': {\n    name: 'French (Congo - Kinshasa)',\n    native: 'français (Congo-Kinshasa)',\n  },\n  'fr-CF': {\n    name: 'French (Central African Republic)',\n    native: 'français (République centrafricaine)',\n  },\n  'fr-CG': {\n    name: 'French (Congo - Brazzaville)',\n    native: 'français (Congo-Brazzaville)',\n  },\n  'fr-CH': {\n    name: 'French (Switzerland)',\n    native: 'français (Suisse)',\n  },\n  'fr-CI': {\n    name: 'French (Côte d’Ivoire)',\n    native: 'français (Côte d’Ivoire)',\n  },\n  'fr-CM': {\n    name: 'French (Cameroon)',\n    native: 'français (Cameroun)',\n  },\n  'fr-DJ': {\n    name: 'French (Djibouti)',\n    native: 'français (Djibouti)',\n  },\n  'fr-DZ': {\n    name: 'French (Algeria)',\n    native: 'français (Algérie)',\n  },\n  'fr-FR': {\n    name: 'French (France)',\n    native: 'français (France)',\n  },\n  'fr-GA': {\n    name: 'French (Gabon)',\n    native: 'français (Gabon)',\n  },\n  'fr-GF': {\n    name: 'French (French Guiana)',\n    native: 'français (Guyane française)',\n  },\n  'fr-GN': {\n    name: 'French (Guinea)',\n    native: 'français (Guinée)',\n  },\n  'fr-GP': {\n    name: 'French (Guadeloupe)',\n    native: 'français (Guadeloupe)',\n  },\n  'fr-GQ': {\n    name: 'French (Equatorial Guinea)',\n    native: 'français (Guinée équatoriale)',\n  },\n  'fr-HT': {\n    name: 'French (Haiti)',\n    native: 'français (Haïti)',\n  },\n  'fr-KM': {\n    name: 'French (Comoros)',\n    native: 'français (Comores)',\n  },\n  'fr-LU': {\n    name: 'French (Luxembourg)',\n    native: 'français (Luxembourg)',\n  },\n  'fr-MA': {\n    name: 'French (Morocco)',\n    native: 'français (Maroc)',\n  },\n  'fr-MC': {\n    name: 'French (Monaco)',\n    native: 'français (Monaco)',\n  },\n  'fr-MF': {\n    name: 'French (St. Martin)',\n    native: 'français (Saint-Martin)',\n  },\n  'fr-MG': {\n    name: 'French (Madagascar)',\n    native: 'français (Madagascar)',\n  },\n  'fr-ML': {\n    name: 'French (Mali)',\n    native: 'français (Mali)',\n  },\n  'fr-MQ': {\n    name: 'French (Martinique)',\n    native: 'français (Martinique)',\n  },\n  'fr-MR': {\n    name: 'French (Mauritania)',\n    native: 'français (Mauritanie)',\n  },\n  'fr-MU': {\n    name: 'French (Mauritius)',\n    native: 'français (Maurice)',\n  },\n  'fr-NC': {\n    name: 'French (New Caledonia)',\n    native: 'français (Nouvelle-Calédonie)',\n  },\n  'fr-NE': {\n    name: 'French (Niger)',\n    native: 'français (Niger)',\n  },\n  'fr-PF': {\n    name: 'French (French Polynesia)',\n    native: 'français (Polynésie française)',\n  },\n  'fr-PM': {\n    name: 'French (St. Pierre & Miquelon)',\n    native: 'français (Saint-Pierre-et-Miquelon)',\n  },\n  'fr-RE': {\n    name: 'French (Réunion)',\n    native: 'français (La Réunion)',\n  },\n  'fr-RW': {\n    name: 'French (Rwanda)',\n    native: 'français (Rwanda)',\n  },\n  'fr-SC': {\n    name: 'French (Seychelles)',\n    native: 'français (Seychelles)',\n  },\n  'fr-SN': {\n    name: 'French (Senegal)',\n    native: 'français (Sénégal)',\n  },\n  'fr-SY': {\n    name: 'French (Syria)',\n    native: 'français (Syrie)',\n  },\n  'fr-TD': {\n    name: 'French (Chad)',\n    native: 'français (Tchad)',\n  },\n  'fr-TG': {\n    name: 'French (Togo)',\n    native: 'français (Togo)',\n  },\n  'fr-TN': {\n    name: 'French (Tunisia)',\n    native: 'français (Tunisie)',\n  },\n  'fr-VU': {\n    name: 'French (Vanuatu)',\n    native: 'français (Vanuatu)',\n  },\n  'fr-WF': {\n    name: 'French (Wallis & Futuna)',\n    native: 'français (Wallis-et-Futuna)',\n  },\n  'fr-YT': {\n    name: 'French (Mayotte)',\n    native: 'français (Mayotte)',\n  },\n  fur: {\n    name: 'Friulian',\n    native: 'furlan',\n  },\n  'fur-IT': {\n    name: 'Friulian (Italy)',\n    native: 'furlan (Italie)',\n  },\n  fy: {\n    name: 'Western Frisian',\n    native: 'Frysk',\n  },\n  'fy-NL': {\n    name: 'Western Frisian (Netherlands)',\n    native: 'Frysk (Nederlân)',\n  },\n  ga: {\n    name: 'Irish',\n    native: 'Gaeilge',\n  },\n  'ga-IE': {\n    name: 'Irish (Ireland)',\n    native: 'Gaeilge (Éire)',\n  },\n  gd: {\n    name: 'Scottish Gaelic',\n    native: 'Gàidhlig',\n  },\n  'gd-GB': {\n    name: 'Scottish Gaelic (United Kingdom)',\n    native: 'Gàidhlig (An Rìoghachd Aonaichte)',\n  },\n  gl: {\n    name: 'Galician',\n    native: 'galego',\n  },\n  'gl-ES': {\n    name: 'Galician (Spain)',\n    native: 'galego (España)',\n  },\n  gsw: {\n    name: 'Swiss German',\n    native: 'Schwiizertüütsch',\n  },\n  'gsw-CH': {\n    name: 'Swiss German (Switzerland)',\n    native: 'Schwiizertüütsch (Schwiiz)',\n  },\n  'gsw-FR': {\n    name: 'Swiss German (France)',\n    native: 'Schwiizertüütsch (Frankriich)',\n  },\n  'gsw-LI': {\n    name: 'Swiss German (Liechtenstein)',\n    native: 'Schwiizertüütsch (Liächteschtäi)',\n  },\n  gu: {\n    name: 'Gujarati',\n    native: 'ગુજરાતી',\n  },\n  'gu-IN': {\n    name: 'Gujarati (India)',\n    native: 'ગુજરાતી (ભારત)',\n  },\n  guz: {\n    name: 'Gusii',\n    native: 'Ekegusii',\n  },\n  'guz-KE': {\n    name: 'Gusii (Kenya)',\n    native: 'Ekegusii (Kenya)',\n  },\n  gv: {\n    name: 'Manx',\n    native: 'Gaelg',\n  },\n  'gv-IM': {\n    name: 'Manx (Isle of Man)',\n    native: 'Gaelg (Ellan Vannin)',\n  },\n  ha: {\n    name: 'Hausa',\n    native: 'Hausa',\n  },\n  'ha-GH': {\n    name: 'Hausa (Ghana)',\n    native: 'Hausa (Gana)',\n  },\n  'ha-NE': {\n    name: 'Hausa (Niger)',\n    native: 'Hausa (Nijar)',\n  },\n  'ha-NG': {\n    name: 'Hausa (Nigeria)',\n    native: 'Hausa (Najeriya)',\n  },\n  haw: {\n    name: 'Hawaiian',\n    native: 'ʻŌlelo Hawaiʻi',\n  },\n  'haw-US': {\n    name: 'Hawaiian (United States)',\n    native: 'ʻŌlelo Hawaiʻi (ʻAmelika Hui Pū ʻIa)',\n  },\n  he: {\n    name: 'Hebrew',\n    native: 'עברית',\n  },\n  'he-IL': {\n    name: 'Hebrew (Israel)',\n    native: 'עברית (ישראל)',\n  },\n  hi: {\n    name: 'Hindi',\n    native: 'हिन्दी',\n  },\n  'hi-IN': {\n    name: 'Hindi (India)',\n    native: 'हिन्दी (भारत)',\n  },\n  hr: {\n    name: 'Croatian',\n    native: 'hrvatski',\n  },\n  'hr-BA': {\n    name: 'Croatian (Bosnia & Herzegovina)',\n    native: 'hrvatski (Bosna i Hercegovina)',\n  },\n  'hr-HR': {\n    name: 'Croatian (Croatia)',\n    native: 'hrvatski (Hrvatska)',\n  },\n  hsb: {\n    name: 'Upper Sorbian',\n    native: 'hornjoserbšćina',\n  },\n  'hsb-DE': {\n    name: 'Upper Sorbian (Germany)',\n    native: 'hornjoserbšćina (Němska)',\n  },\n  hu: {\n    name: 'Hungarian',\n    native: 'magyar',\n  },\n  'hu-HU': {\n    name: 'Hungarian (Hungary)',\n    native: 'magyar (Magyarország)',\n  },\n  hy: {\n    name: 'Armenian',\n    native: 'հայերեն',\n  },\n  'hy-AM': {\n    name: 'Armenian (Armenia)',\n    native: 'հայերեն (Հայաստան)',\n  },\n  id: {\n    name: 'Indonesian',\n    native: 'Indonesia',\n  },\n  'id-ID': {\n    name: 'Indonesian (Indonesia)',\n    native: 'Indonesia (Indonesia)',\n  },\n  ig: {\n    name: 'Igbo',\n    native: 'Igbo',\n  },\n  'ig-NG': {\n    name: 'Igbo (Nigeria)',\n    native: 'Igbo (Naịjịrịa)',\n  },\n  ii: {\n    name: 'Sichuan Yi',\n    native: 'ꆈꌠꉙ',\n  },\n  'ii-CN': {\n    name: 'Sichuan Yi (China)',\n    native: 'ꆈꌠꉙ (ꍏꇩ)',\n  },\n  is: {\n    name: 'Icelandic',\n    native: 'íslenska',\n  },\n  'is-IS': {\n    name: 'Icelandic (Iceland)',\n    native: 'íslenska (Ísland)',\n  },\n  it: {\n    name: 'Italian',\n    native: 'italiano',\n  },\n  'it-CH': {\n    name: 'Italian (Switzerland)',\n    native: 'italiano (Svizzera)',\n  },\n  'it-IT': {\n    name: 'Italian (Italy)',\n    native: 'italiano (Italia)',\n  },\n  'it-SM': {\n    name: 'Italian (San Marino)',\n    native: 'italiano (San Marino)',\n  },\n  'it-VA': {\n    name: 'Italian (Vatican City)',\n    native: 'italiano (Città del Vaticano)',\n  },\n  ja: {\n    name: 'Japanese',\n    native: '日本語',\n  },\n  'ja-JP': {\n    name: 'Japanese (Japan)',\n    native: '日本語 (日本)',\n  },\n  jgo: {\n    name: 'Ngomba',\n    native: 'Ndaꞌa',\n  },\n  'jgo-CM': {\n    name: 'Ngomba (Cameroon)',\n    native: 'Ndaꞌa (Kamɛlûn)',\n  },\n  jmc: {\n    name: 'Machame',\n    native: 'Kimachame',\n  },\n  'jmc-TZ': {\n    name: 'Machame (Tanzania)',\n    native: 'Kimachame (Tanzania)',\n  },\n  ka: {\n    name: 'Georgian',\n    native: 'ქართული',\n  },\n  'ka-GE': {\n    name: 'Georgian (Georgia)',\n    native: 'ქართული (საქართველო)',\n  },\n  kab: {\n    name: 'Kabyle',\n    native: 'Taqbaylit',\n  },\n  'kab-DZ': {\n    name: 'Kabyle (Algeria)',\n    native: 'Taqbaylit (Lezzayer)',\n  },\n  kam: {\n    name: 'Kamba',\n    native: 'Kikamba',\n  },\n  'kam-KE': {\n    name: 'Kamba (Kenya)',\n    native: 'Kikamba (Kenya)',\n  },\n  kde: {\n    name: 'Makonde',\n    native: 'Chimakonde',\n  },\n  'kde-TZ': {\n    name: 'Makonde (Tanzania)',\n    native: 'Chimakonde (Tanzania)',\n  },\n  kea: {\n    name: 'Kabuverdianu',\n    native: 'kabuverdianu',\n  },\n  'kea-CV': {\n    name: 'Kabuverdianu (Cape Verde)',\n    native: 'kabuverdianu (Kabu Verdi)',\n  },\n  khq: {\n    name: 'Koyra Chiini',\n    native: 'Koyra ciini',\n  },\n  'khq-ML': {\n    name: 'Koyra Chiini (Mali)',\n    native: 'Koyra ciini (Maali)',\n  },\n  ki: {\n    name: 'Kikuyu',\n    native: 'Gikuyu',\n  },\n  'ki-KE': {\n    name: 'Kikuyu (Kenya)',\n    native: 'Gikuyu (Kenya)',\n  },\n  kk: {\n    name: 'Kazakh',\n    native: 'қазақ тілі',\n  },\n  'kk-KZ': {\n    name: 'Kazakh (Kazakhstan)',\n    native: 'қазақ тілі (Қазақстан)',\n  },\n  kkj: {\n    name: 'Kako',\n    native: 'kakɔ',\n  },\n  'kkj-CM': {\n    name: 'Kako (Cameroon)',\n    native: 'kakɔ (Kamɛrun)',\n  },\n  kl: {\n    name: 'Kalaallisut',\n    native: 'kalaallisut',\n  },\n  'kl-GL': {\n    name: 'Kalaallisut (Greenland)',\n    native: 'kalaallisut (Kalaallit Nunaat)',\n  },\n  kln: {\n    name: 'Kalenjin',\n    native: 'Kalenjin',\n  },\n  'kln-KE': {\n    name: 'Kalenjin (Kenya)',\n    native: 'Kalenjin (Emetab Kenya)',\n  },\n  km: {\n    name: 'Khmer',\n    native: 'ខ្មែរ',\n  },\n  'km-KH': {\n    name: 'Khmer (Cambodia)',\n    native: 'ខ្មែរ (កម្ពុជា)',\n  },\n  kn: {\n    name: 'Kannada',\n    native: 'ಕನ್ನಡ',\n  },\n  'kn-IN': {\n    name: 'Kannada (India)',\n    native: 'ಕನ್ನಡ (ಭಾರತ)',\n  },\n  ko: {\n    name: 'Korean',\n    native: '한국어',\n  },\n  'ko-KP': {\n    name: 'Korean (North Korea)',\n    native: '한국어(조선민주주의인민공화국)',\n  },\n  'ko-KR': {\n    name: 'Korean (South Korea)',\n    native: '한국어(대한민국)',\n  },\n  kok: {\n    name: 'Konkani',\n    native: 'कोंकणी',\n  },\n  'kok-IN': {\n    name: 'Konkani (India)',\n    native: 'कोंकणी (भारत)',\n  },\n  ks: {\n    name: 'Kashmiri',\n    native: 'کٲشُر',\n  },\n  'ks-IN': {\n    name: 'Kashmiri (India)',\n    native: 'کٲشُر (ہِنٛدوستان)',\n  },\n  ksb: {\n    name: 'Shambala',\n    native: 'Kishambaa',\n  },\n  'ksb-TZ': {\n    name: 'Shambala (Tanzania)',\n    native: 'Kishambaa (Tanzania)',\n  },\n  ksf: {\n    name: 'Bafia',\n    native: 'rikpa',\n  },\n  'ksf-CM': {\n    name: 'Bafia (Cameroon)',\n    native: 'rikpa (kamɛrún)',\n  },\n  ksh: {\n    name: 'Colognian',\n    native: 'Kölsch',\n  },\n  'ksh-DE': {\n    name: 'Colognian (Germany)',\n    native: 'Kölsch en Doütschland',\n  },\n  kw: {\n    name: 'Cornish',\n    native: 'kernewek',\n  },\n  'kw-GB': {\n    name: 'Cornish (United Kingdom)',\n    native: 'kernewek (Rywvaneth Unys)',\n  },\n  ky: {\n    name: 'Kyrgyz',\n    native: 'кыргызча',\n  },\n  'ky-KG': {\n    name: 'Kyrgyz (Kyrgyzstan)',\n    native: 'кыргызча (Кыргызстан)',\n  },\n  lag: {\n    name: 'Langi',\n    native: 'Kɨlaangi',\n  },\n  'lag-TZ': {\n    name: 'Langi (Tanzania)',\n    native: 'Kɨlaangi (Taansanía)',\n  },\n  lb: {\n    name: 'Luxembourgish',\n    native: 'Lëtzebuergesch',\n  },\n  'lb-LU': {\n    name: 'Luxembourgish (Luxembourg)',\n    native: 'Lëtzebuergesch (Lëtzebuerg)',\n  },\n  lg: {\n    name: 'Ganda',\n    native: 'Luganda',\n  },\n  'lg-UG': {\n    name: 'Ganda (Uganda)',\n    native: 'Luganda (Yuganda)',\n  },\n  lkt: {\n    name: 'Lakota',\n    native: 'Lakȟólʼiyapi',\n  },\n  'lkt-US': {\n    name: 'Lakota (United States)',\n    native: 'Lakȟólʼiyapi (Mílahaŋska Tȟamákȟočhe)',\n  },\n  ln: {\n    name: 'Lingala',\n    native: 'lingála',\n  },\n  'ln-AO': {\n    name: 'Lingala (Angola)',\n    native: 'lingála (Angóla)',\n  },\n  'ln-CD': {\n    name: 'Lingala (Congo - Kinshasa)',\n    native: 'lingála (Republíki ya Kongó Demokratíki)',\n  },\n  'ln-CF': {\n    name: 'Lingala (Central African Republic)',\n    native: 'lingála (Repibiki ya Afríka ya Káti)',\n  },\n  'ln-CG': {\n    name: 'Lingala (Congo - Brazzaville)',\n    native: 'lingála (Kongo)',\n  },\n  lo: {\n    name: 'Lao',\n    native: 'ລາວ',\n  },\n  'lo-LA': {\n    name: 'Lao (Laos)',\n    native: 'ລາວ (ລາວ)',\n  },\n  lrc: {\n    name: 'Northern Luri',\n    native: 'لۊری شومالی',\n  },\n  'lrc-IQ': {\n    name: 'Northern Luri (Iraq)',\n    native: 'لۊری شومالی (IQ)',\n  },\n  'lrc-IR': {\n    name: 'Northern Luri (Iran)',\n    native: 'لۊری شومالی (IR)',\n  },\n  lt: {\n    name: 'Lithuanian',\n    native: 'lietuvių',\n  },\n  'lt-LT': {\n    name: 'Lithuanian (Lithuania)',\n    native: 'lietuvių (Lietuva)',\n  },\n  lu: {\n    name: 'Luba-Katanga',\n    native: 'Tshiluba',\n  },\n  'lu-CD': {\n    name: 'Luba-Katanga (Congo - Kinshasa)',\n    native: 'Tshiluba (Ditunga wa Kongu)',\n  },\n  luo: {\n    name: 'Luo',\n    native: 'Dholuo',\n  },\n  'luo-KE': {\n    name: 'Luo (Kenya)',\n    native: 'Dholuo (Kenya)',\n  },\n  luy: {\n    name: 'Luyia',\n    native: 'Luluhia',\n  },\n  'luy-KE': {\n    name: 'Luyia (Kenya)',\n    native: 'Luluhia (Kenya)',\n  },\n  lv: {\n    name: 'Latvian',\n    native: 'latviešu',\n  },\n  'lv-LV': {\n    name: 'Latvian (Latvia)',\n    native: 'latviešu (Latvija)',\n  },\n  mas: {\n    name: 'Masai',\n    native: 'Maa',\n  },\n  'mas-KE': {\n    name: 'Masai (Kenya)',\n    native: 'Maa (Kenya)',\n  },\n  'mas-TZ': {\n    name: 'Masai (Tanzania)',\n    native: 'Maa (Tansania)',\n  },\n  mer: {\n    name: 'Meru',\n    native: 'Kĩmĩrũ',\n  },\n  'mer-KE': {\n    name: 'Meru (Kenya)',\n    native: 'Kĩmĩrũ (Kenya)',\n  },\n  mfe: {\n    name: 'Morisyen',\n    native: 'kreol morisien',\n  },\n  'mfe-MU': {\n    name: 'Morisyen (Mauritius)',\n    native: 'kreol morisien (Moris)',\n  },\n  mg: {\n    name: 'Malagasy',\n    native: 'Malagasy',\n  },\n  'mg-MG': {\n    name: 'Malagasy (Madagascar)',\n    native: 'Malagasy (Madagasikara)',\n  },\n  mgh: {\n    name: 'Makhuwa-Meetto',\n    native: 'Makua',\n  },\n  'mgh-MZ': {\n    name: 'Makhuwa-Meetto (Mozambique)',\n    native: 'Makua (Umozambiki)',\n  },\n  mgo: {\n    name: 'Metaʼ',\n    native: 'metaʼ',\n  },\n  'mgo-CM': {\n    name: 'Metaʼ (Cameroon)',\n    native: 'metaʼ (Kamalun)',\n  },\n  mk: {\n    name: 'Macedonian',\n    native: 'македонски',\n  },\n  'mk-MK': {\n    name: 'Macedonian (Macedonia)',\n    native: 'македонски (Македонија)',\n  },\n  ml: {\n    name: 'Malayalam',\n    native: 'മലയാളം',\n  },\n  'ml-IN': {\n    name: 'Malayalam (India)',\n    native: 'മലയാളം (ഇന്ത്യ)',\n  },\n  mn: {\n    name: 'Mongolian',\n    native: 'монгол',\n  },\n  'mn-MN': {\n    name: 'Mongolian (Mongolia)',\n    native: 'монгол (Монгол)',\n  },\n  mr: {\n    name: 'Marathi',\n    native: 'मराठी',\n  },\n  'mr-IN': {\n    name: 'Marathi (India)',\n    native: 'मराठी (भारत)',\n  },\n  ms: {\n    name: 'Malay',\n    native: 'Melayu',\n  },\n  'ms-BN': {\n    name: 'Malay (Brunei)',\n    native: 'Melayu (Brunei)',\n  },\n  'ms-MY': {\n    name: 'Malay (Malaysia)',\n    native: 'Melayu (Malaysia)',\n  },\n  'ms-SG': {\n    name: 'Malay (Singapore)',\n    native: 'Melayu (Singapura)',\n  },\n  mt: {\n    name: 'Maltese',\n    native: 'Malti',\n  },\n  'mt-MT': {\n    name: 'Maltese (Malta)',\n    native: 'Malti (Malta)',\n  },\n  mua: {\n    name: 'Mundang',\n    native: 'MUNDAŊ',\n  },\n  'mua-CM': {\n    name: 'Mundang (Cameroon)',\n    native: 'MUNDAŊ (kameruŋ)',\n  },\n  my: {\n    name: 'Burmese',\n    native: 'မြန်မာ',\n  },\n  'my-MM': {\n    name: 'Burmese (Myanmar [Burma])',\n    native: 'မြန်မာ (မြန်မာ)',\n  },\n  mzn: {\n    name: 'Mazanderani',\n    native: 'مازرونی',\n  },\n  'mzn-IR': {\n    name: 'Mazanderani (Iran)',\n    native: 'مازرونی (ایران)',\n  },\n  naq: {\n    name: 'Nama',\n    native: 'Khoekhoegowab',\n  },\n  'naq-NA': {\n    name: 'Nama (Namibia)',\n    native: 'Khoekhoegowab (Namibiab)',\n  },\n  nb: {\n    name: 'Norwegian Bokmål',\n    native: 'norsk bokmål',\n  },\n  'nb-NO': {\n    name: 'Norwegian Bokmål (Norway)',\n    native: 'norsk bokmål (Norge)',\n  },\n  'nb-SJ': {\n    name: 'Norwegian Bokmål (Svalbard & Jan Mayen)',\n    native: 'norsk bokmål (Svalbard og Jan Mayen)',\n  },\n  nd: {\n    name: 'North Ndebele',\n    native: 'isiNdebele',\n  },\n  'nd-ZW': {\n    name: 'North Ndebele (Zimbabwe)',\n    native: 'isiNdebele (Zimbabwe)',\n  },\n  nds: {\n    name: 'Low German',\n    native: 'nds',\n  },\n  'nds-DE': {\n    name: 'Low German (Germany)',\n    native: 'nds (DE)',\n  },\n  'nds-NL': {\n    name: 'Low German (Netherlands)',\n    native: 'nds (NL)',\n  },\n  ne: {\n    name: 'Nepali',\n    native: 'नेपाली',\n  },\n  'ne-IN': {\n    name: 'Nepali (India)',\n    native: 'नेपाली (भारत)',\n  },\n  'ne-NP': {\n    name: 'Nepali (Nepal)',\n    native: 'नेपाली (नेपाल)',\n  },\n  nl: {\n    name: 'Dutch',\n    native: 'Nederlands',\n  },\n  'nl-AW': {\n    name: 'Dutch (Aruba)',\n    native: 'Nederlands (Aruba)',\n  },\n  'nl-BE': {\n    name: 'Dutch (Belgium)',\n    native: 'Nederlands (België)',\n  },\n  'nl-BQ': {\n    name: 'Dutch (Caribbean Netherlands)',\n    native: 'Nederlands (Caribisch Nederland)',\n  },\n  'nl-CW': {\n    name: 'Dutch (Curaçao)',\n    native: 'Nederlands (Curaçao)',\n  },\n  'nl-NL': {\n    name: 'Dutch (Netherlands)',\n    native: 'Nederlands (Nederland)',\n  },\n  'nl-SR': {\n    name: 'Dutch (Suriname)',\n    native: 'Nederlands (Suriname)',\n  },\n  'nl-SX': {\n    name: 'Dutch (Sint Maarten)',\n    native: 'Nederlands (Sint-Maarten)',\n  },\n  nmg: {\n    name: 'Kwasio',\n    native: 'nmg',\n  },\n  'nmg-CM': {\n    name: 'Kwasio (Cameroon)',\n    native: 'nmg (Kamerun)',\n  },\n  nn: {\n    name: 'Norwegian Nynorsk',\n    native: 'nynorsk',\n  },\n  'nn-NO': {\n    name: 'Norwegian Nynorsk (Norway)',\n    native: 'nynorsk (Noreg)',\n  },\n  nnh: {\n    name: 'Ngiemboon',\n    native: 'Shwóŋò ngiembɔɔn',\n  },\n  'nnh-CM': {\n    name: 'Ngiemboon (Cameroon)',\n    native: 'Shwóŋò ngiembɔɔn (Kàmalûm)',\n  },\n  nus: {\n    name: 'Nuer',\n    native: 'Thok Nath',\n  },\n  'nus-SS': {\n    name: 'Nuer (South Sudan)',\n    native: 'Thok Nath (SS)',\n  },\n  nyn: {\n    name: 'Nyankole',\n    native: 'Runyankore',\n  },\n  'nyn-UG': {\n    name: 'Nyankole (Uganda)',\n    native: 'Runyankore (Uganda)',\n  },\n  om: {\n    name: 'Oromo',\n    native: 'Oromoo',\n  },\n  'om-ET': {\n    name: 'Oromo (Ethiopia)',\n    native: 'Oromoo (Itoophiyaa)',\n  },\n  'om-KE': {\n    name: 'Oromo (Kenya)',\n    native: 'Oromoo (Keeniyaa)',\n  },\n  or: {\n    name: 'Odia',\n    native: 'ଓଡ଼ିଆ',\n  },\n  'or-IN': {\n    name: 'Odia (India)',\n    native: 'ଓଡ଼ିଆ (ଭାରତ)',\n  },\n  os: {\n    name: 'Ossetic',\n    native: 'ирон',\n  },\n  'os-GE': {\n    name: 'Ossetic (Georgia)',\n    native: 'ирон (Гуырдзыстон)',\n  },\n  'os-RU': {\n    name: 'Ossetic (Russia)',\n    native: 'ирон (Уӕрӕсе)',\n  },\n  pa: {\n    name: 'Punjabi',\n    native: 'ਪੰਜਾਬੀ',\n  },\n  'pa-Arab': {\n    name: 'Punjabi (Arabic)',\n    native: 'پنجابی (عربی)',\n  },\n  'pa-Arab-PK': {\n    name: 'Punjabi (Arabic, Pakistan)',\n    native: 'پنجابی (عربی, پاکستان)',\n  },\n  'pa-Guru': {\n    name: 'Punjabi (Gurmukhi)',\n    native: 'ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)',\n  },\n  'pa-Guru-IN': {\n    name: 'Punjabi (Gurmukhi, India)',\n    native: 'ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ, ਭਾਰਤ)',\n  },\n  pl: {\n    name: 'Polish',\n    native: 'polski',\n  },\n  'pl-PL': {\n    name: 'Polish (Poland)',\n    native: 'polski (Polska)',\n  },\n  ps: {\n    name: 'Pashto',\n    native: 'پښتو',\n  },\n  'ps-AF': {\n    name: 'Pashto (Afghanistan)',\n    native: 'پښتو (افغانستان)',\n  },\n  pt: {\n    name: 'Portuguese',\n    native: 'português',\n  },\n  'pt-AO': {\n    name: 'Portuguese (Angola)',\n    native: 'português (Angola)',\n  },\n  'pt-BR': {\n    name: 'Portuguese (Brazil)',\n    native: 'português (Brasil)',\n  },\n  'pt-CH': {\n    name: 'Portuguese (Switzerland)',\n    native: 'português (Suíça)',\n  },\n  'pt-CV': {\n    name: 'Portuguese (Cape Verde)',\n    native: 'português (Cabo Verde)',\n  },\n  'pt-GQ': {\n    name: 'Portuguese (Equatorial Guinea)',\n    native: 'português (Guiné Equatorial)',\n  },\n  'pt-GW': {\n    name: 'Portuguese (Guinea-Bissau)',\n    native: 'português (Guiné-Bissau)',\n  },\n  'pt-LU': {\n    name: 'Portuguese (Luxembourg)',\n    native: 'português (Luxemburgo)',\n  },\n  'pt-MO': {\n    name: 'Portuguese (Macau SAR China)',\n    native: 'português (Macau, RAE da China)',\n  },\n  'pt-MZ': {\n    name: 'Portuguese (Mozambique)',\n    native: 'português (Moçambique)',\n  },\n  'pt-PT': {\n    name: 'Portuguese (Portugal)',\n    native: 'português (Portugal)',\n  },\n  'pt-ST': {\n    name: 'Portuguese (São Tomé & Príncipe)',\n    native: 'português (São Tomé e Príncipe)',\n  },\n  'pt-TL': {\n    name: 'Portuguese (Timor-Leste)',\n    native: 'português (Timor-Leste)',\n  },\n  qu: {\n    name: 'Quechua',\n    native: 'Runasimi',\n  },\n  'qu-BO': {\n    name: 'Quechua (Bolivia)',\n    native: 'Runasimi (Bolivia)',\n  },\n  'qu-EC': {\n    name: 'Quechua (Ecuador)',\n    native: 'Runasimi (Ecuador)',\n  },\n  'qu-PE': {\n    name: 'Quechua (Peru)',\n    native: 'Runasimi (Perú)',\n  },\n  rm: {\n    name: 'Romansh',\n    native: 'rumantsch',\n  },\n  'rm-CH': {\n    name: 'Romansh (Switzerland)',\n    native: 'rumantsch (Svizra)',\n  },\n  rn: {\n    name: 'Rundi',\n    native: 'Ikirundi',\n  },\n  'rn-BI': {\n    name: 'Rundi (Burundi)',\n    native: 'Ikirundi (Uburundi)',\n  },\n  ro: {\n    name: 'Romanian',\n    native: 'română',\n  },\n  'ro-MD': {\n    name: 'Romanian (Moldova)',\n    native: 'română (Republica Moldova)',\n  },\n  'ro-RO': {\n    name: 'Romanian (Romania)',\n    native: 'română (România)',\n  },\n  rof: {\n    name: 'Rombo',\n    native: 'Kihorombo',\n  },\n  'rof-TZ': {\n    name: 'Rombo (Tanzania)',\n    native: 'Kihorombo (Tanzania)',\n  },\n  ru: {\n    name: 'Russian',\n    native: 'русский',\n  },\n  'ru-BY': {\n    name: 'Russian (Belarus)',\n    native: 'русский (Беларусь)',\n  },\n  'ru-KG': {\n    name: 'Russian (Kyrgyzstan)',\n    native: 'русский (Киргизия)',\n  },\n  'ru-KZ': {\n    name: 'Russian (Kazakhstan)',\n    native: 'русский (Казахстан)',\n  },\n  'ru-MD': {\n    name: 'Russian (Moldova)',\n    native: 'русский (Молдова)',\n  },\n  'ru-RU': {\n    name: 'Russian (Russia)',\n    native: 'русский (Россия)',\n  },\n  'ru-UA': {\n    name: 'Russian (Ukraine)',\n    native: 'русский (Украина)',\n  },\n  rw: {\n    name: 'Kinyarwanda',\n    native: 'Kinyarwanda',\n  },\n  'rw-RW': {\n    name: 'Kinyarwanda (Rwanda)',\n    native: 'Kinyarwanda (U Rwanda)',\n  },\n  rwk: {\n    name: 'Rwa',\n    native: 'Kiruwa',\n  },\n  'rwk-TZ': {\n    name: 'Rwa (Tanzania)',\n    native: 'Kiruwa (Tanzania)',\n  },\n  sah: {\n    name: 'Sakha',\n    native: 'саха тыла',\n  },\n  'sah-RU': {\n    name: 'Sakha (Russia)',\n    native: 'саха тыла (Арассыыйа)',\n  },\n  saq: {\n    name: 'Samburu',\n    native: 'Kisampur',\n  },\n  'saq-KE': {\n    name: 'Samburu (Kenya)',\n    native: 'Kisampur (Kenya)',\n  },\n  sbp: {\n    name: 'Sangu',\n    native: 'Ishisangu',\n  },\n  'sbp-TZ': {\n    name: 'Sangu (Tanzania)',\n    native: 'Ishisangu (Tansaniya)',\n  },\n  se: {\n    name: 'Northern Sami',\n    native: 'davvisámegiella',\n  },\n  'se-FI': {\n    name: 'Northern Sami (Finland)',\n    native: 'davvisámegiella (Suopma)',\n  },\n  'se-NO': {\n    name: 'Northern Sami (Norway)',\n    native: 'davvisámegiella (Norga)',\n  },\n  'se-SE': {\n    name: 'Northern Sami (Sweden)',\n    native: 'davvisámegiella (Ruoŧŧa)',\n  },\n  seh: {\n    name: 'Sena',\n    native: 'sena',\n  },\n  'seh-MZ': {\n    name: 'Sena (Mozambique)',\n    native: 'sena (Moçambique)',\n  },\n  ses: {\n    name: 'Koyraboro Senni',\n    native: 'Koyraboro senni',\n  },\n  'ses-ML': {\n    name: 'Koyraboro Senni (Mali)',\n    native: 'Koyraboro senni (Maali)',\n  },\n  sg: {\n    name: 'Sango',\n    native: 'Sängö',\n  },\n  'sg-CF': {\n    name: 'Sango (Central African Republic)',\n    native: 'Sängö (Ködörösêse tî Bêafrîka)',\n  },\n  shi: {\n    name: 'Tachelhit',\n    native: 'ⵜⴰⵛⵍⵃⵉⵜ',\n  },\n  'shi-Latn': {\n    name: 'Tachelhit (Latin)',\n    native: 'Tashelḥiyt (Latn)',\n  },\n  'shi-Latn-MA': {\n    name: 'Tachelhit (Latin, Morocco)',\n    native: 'Tashelḥiyt (Latn, lmɣrib)',\n  },\n  'shi-Tfng': {\n    name: 'Tachelhit (Tifinagh)',\n    native: 'ⵜⴰⵛⵍⵃⵉⵜ (Tfng)',\n  },\n  'shi-Tfng-MA': {\n    name: 'Tachelhit (Tifinagh, Morocco)',\n    native: 'ⵜⴰⵛⵍⵃⵉⵜ (Tfng, ⵍⵎⵖⵔⵉⴱ)',\n  },\n  si: {\n    name: 'Sinhala',\n    native: 'සිංහල',\n  },\n  'si-LK': {\n    name: 'Sinhala (Sri Lanka)',\n    native: 'සිංහල (ශ්‍රී ලංකාව)',\n  },\n  sk: {\n    name: 'Slovak',\n    native: 'slovenčina',\n  },\n  'sk-SK': {\n    name: 'Slovak (Slovakia)',\n    native: 'slovenčina (Slovensko)',\n  },\n  sl: {\n    name: 'Slovenian',\n    native: 'slovenščina',\n  },\n  'sl-SI': {\n    name: 'Slovenian (Slovenia)',\n    native: 'slovenščina (Slovenija)',\n  },\n  smn: {\n    name: 'Inari Sami',\n    native: 'anarâškielâ',\n  },\n  'smn-FI': {\n    name: 'Inari Sami (Finland)',\n    native: 'anarâškielâ (Suomâ)',\n  },\n  sn: {\n    name: 'Shona',\n    native: 'chiShona',\n  },\n  'sn-ZW': {\n    name: 'Shona (Zimbabwe)',\n    native: 'chiShona (Zimbabwe)',\n  },\n  so: {\n    name: 'Somali',\n    native: 'Soomaali',\n  },\n  'so-DJ': {\n    name: 'Somali (Djibouti)',\n    native: 'Soomaali (Jabuuti)',\n  },\n  'so-ET': {\n    name: 'Somali (Ethiopia)',\n    native: 'Soomaali (Itoobiya)',\n  },\n  'so-KE': {\n    name: 'Somali (Kenya)',\n    native: 'Soomaali (Kiiniya)',\n  },\n  'so-SO': {\n    name: 'Somali (Somalia)',\n    native: 'Soomaali (Soomaaliya)',\n  },\n  sq: {\n    name: 'Albanian',\n    native: 'shqip',\n  },\n  'sq-AL': {\n    name: 'Albanian (Albania)',\n    native: 'shqip (Shqipëri)',\n  },\n  'sq-MK': {\n    name: 'Albanian (Macedonia)',\n    native: 'shqip (Maqedoni)',\n  },\n  'sq-XK': {\n    name: 'Albanian (Kosovo)',\n    native: 'shqip (Kosovë)',\n  },\n  sr: {\n    name: 'Serbian',\n    native: 'српски',\n  },\n  'sr-Cyrl': {\n    name: 'Serbian (Cyrillic)',\n    native: 'српски (ћирилица)',\n  },\n  'sr-Cyrl-BA': {\n    name: 'Serbian (Cyrillic, Bosnia & Herzegovina)',\n    native: 'српски (ћирилица, Босна и Херцеговина)',\n  },\n  'sr-Cyrl-ME': {\n    name: 'Serbian (Cyrillic, Montenegro)',\n    native: 'српски (ћирилица, Црна Гора)',\n  },\n  'sr-Cyrl-RS': {\n    name: 'Serbian (Cyrillic, Serbia)',\n    native: 'српски (ћирилица, Србија)',\n  },\n  'sr-Cyrl-XK': {\n    name: 'Serbian (Cyrillic, Kosovo)',\n    native: 'српски (ћирилица, Косово)',\n  },\n  'sr-Latn': {\n    name: 'Serbian (Latin)',\n    native: 'srpski (latinica)',\n  },\n  'sr-Latn-BA': {\n    name: 'Serbian (Latin, Bosnia & Herzegovina)',\n    native: 'srpski (latinica, Bosna i Hercegovina)',\n  },\n  'sr-Latn-ME': {\n    name: 'Serbian (Latin, Montenegro)',\n    native: 'srpski (latinica, Crna Gora)',\n  },\n  'sr-Latn-RS': {\n    name: 'Serbian (Latin, Serbia)',\n    native: 'srpski (latinica, Srbija)',\n  },\n  'sr-Latn-XK': {\n    name: 'Serbian (Latin, Kosovo)',\n    native: 'srpski (latinica, Kosovo)',\n  },\n  sv: {\n    name: 'Swedish',\n    native: 'svenska',\n  },\n  'sv-AX': {\n    name: 'Swedish (Åland Islands)',\n    native: 'svenska (Åland)',\n  },\n  'sv-FI': {\n    name: 'Swedish (Finland)',\n    native: 'svenska (Finland)',\n  },\n  'sv-SE': {\n    name: 'Swedish (Sweden)',\n    native: 'svenska (Sverige)',\n  },\n  sw: {\n    name: 'Swahili',\n    native: 'Kiswahili',\n  },\n  'sw-CD': {\n    name: 'Swahili (Congo - Kinshasa)',\n    native: 'Kiswahili (Jamhuri ya Kidemokrasia ya Kongo)',\n  },\n  'sw-KE': {\n    name: 'Swahili (Kenya)',\n    native: 'Kiswahili (Kenya)',\n  },\n  'sw-TZ': {\n    name: 'Swahili (Tanzania)',\n    native: 'Kiswahili (Tanzania)',\n  },\n  'sw-UG': {\n    name: 'Swahili (Uganda)',\n    native: 'Kiswahili (Uganda)',\n  },\n  ta: {\n    name: 'Tamil',\n    native: 'தமிழ்',\n  },\n  'ta-IN': {\n    name: 'Tamil (India)',\n    native: 'தமிழ் (இந்தியா)',\n  },\n  'ta-LK': {\n    name: 'Tamil (Sri Lanka)',\n    native: 'தமிழ் (இலங்கை)',\n  },\n  'ta-MY': {\n    name: 'Tamil (Malaysia)',\n    native: 'தமிழ் (மலேசியா)',\n  },\n  'ta-SG': {\n    name: 'Tamil (Singapore)',\n    native: 'தமிழ் (சிங்கப்பூர்)',\n  },\n  te: {\n    name: 'Telugu',\n    native: 'తెలుగు',\n  },\n  'te-IN': {\n    name: 'Telugu (India)',\n    native: 'తెలుగు (భారతదేశం)',\n  },\n  teo: {\n    name: 'Teso',\n    native: 'Kiteso',\n  },\n  'teo-KE': {\n    name: 'Teso (Kenya)',\n    native: 'Kiteso (Kenia)',\n  },\n  'teo-UG': {\n    name: 'Teso (Uganda)',\n    native: 'Kiteso (Uganda)',\n  },\n  tg: {\n    name: 'Tajik',\n    native: 'тоҷикӣ',\n  },\n  'tg-TJ': {\n    name: 'Tajik (Tajikistan)',\n    native: 'тоҷикӣ (Тоҷикистон)',\n  },\n  th: {\n    name: 'Thai',\n    native: 'ไทย',\n  },\n  'th-TH': {\n    name: 'Thai (Thailand)',\n    native: 'ไทย (ไทย)',\n  },\n  ti: {\n    name: 'Tigrinya',\n    native: 'ትግርኛ',\n  },\n  'ti-ER': {\n    name: 'Tigrinya (Eritrea)',\n    native: 'ትግርኛ (ኤርትራ)',\n  },\n  'ti-ET': {\n    name: 'Tigrinya (Ethiopia)',\n    native: 'ትግርኛ (ኢትዮጵያ)',\n  },\n  to: {\n    name: 'Tongan',\n    native: 'lea fakatonga',\n  },\n  'to-TO': {\n    name: 'Tongan (Tonga)',\n    native: 'lea fakatonga (Tonga)',\n  },\n  tr: {\n    name: 'Turkish',\n    native: 'Türkçe',\n  },\n  'tr-CY': {\n    name: 'Turkish (Cyprus)',\n    native: 'Türkçe (Kıbrıs)',\n  },\n  'tr-TR': {\n    name: 'Turkish (Turkey)',\n    native: 'Türkçe (Türkiye)',\n  },\n  tt: {\n    name: 'Tatar',\n    native: 'татар',\n  },\n  'tt-RU': {\n    name: 'Tatar (Russia)',\n    native: 'татар (Россия)',\n  },\n  twq: {\n    name: 'Tasawaq',\n    native: 'Tasawaq senni',\n  },\n  'twq-NE': {\n    name: 'Tasawaq (Niger)',\n    native: 'Tasawaq senni (Nižer)',\n  },\n  tzm: {\n    name: 'Central Atlas Tamazight',\n    native: 'Tamaziɣt n laṭlaṣ',\n  },\n  'tzm-MA': {\n    name: 'Central Atlas Tamazight (Morocco)',\n    native: 'Tamaziɣt n laṭlaṣ (Meṛṛuk)',\n  },\n  ug: {\n    name: 'Uyghur',\n    native: 'ئۇيغۇرچە',\n  },\n  'ug-CN': {\n    name: 'Uyghur (China)',\n    native: 'ئۇيغۇرچە (جۇڭگو)',\n  },\n  uk: {\n    name: 'Ukrainian',\n    native: 'українська',\n  },\n  'uk-UA': {\n    name: 'Ukrainian (Ukraine)',\n    native: 'українська (Україна)',\n  },\n  ur: {\n    name: 'Urdu',\n    native: 'اردو',\n  },\n  'ur-IN': {\n    name: 'Urdu (India)',\n    native: 'اردو (بھارت)',\n  },\n  'ur-PK': {\n    name: 'Urdu (Pakistan)',\n    native: 'اردو (پاکستان)',\n  },\n  uz: {\n    name: 'Uzbek',\n    native: 'o‘zbek',\n  },\n  'uz-Arab': {\n    name: 'Uzbek (Arabic)',\n    native: 'اوزبیک (عربی)',\n  },\n  'uz-Arab-AF': {\n    name: 'Uzbek (Arabic, Afghanistan)',\n    native: 'اوزبیک (عربی, افغانستان)',\n  },\n  'uz-Cyrl': {\n    name: 'Uzbek (Cyrillic)',\n    native: 'ўзбекча (Кирил)',\n  },\n  'uz-Cyrl-UZ': {\n    name: 'Uzbek (Cyrillic, Uzbekistan)',\n    native: 'ўзбекча (Кирил, Ўзбекистон)',\n  },\n  'uz-Latn': {\n    name: 'Uzbek (Latin)',\n    native: 'o‘zbek (lotin)',\n  },\n  'uz-Latn-UZ': {\n    name: 'Uzbek (Latin, Uzbekistan)',\n    native: 'o‘zbek (lotin, Oʻzbekiston)',\n  },\n  vai: {\n    name: 'Vai',\n    native: 'ꕙꔤ',\n  },\n  'vai-Latn': {\n    name: 'Vai (Latin)',\n    native: 'Vai (Latn)',\n  },\n  'vai-Latn-LR': {\n    name: 'Vai (Latin, Liberia)',\n    native: 'Vai (Latn, Laibhiya)',\n  },\n  'vai-Vaii': {\n    name: 'Vai (Vai)',\n    native: 'ꕙꔤ (Vaii)',\n  },\n  'vai-Vaii-LR': {\n    name: 'Vai (Vai, Liberia)',\n    native: 'ꕙꔤ (Vaii, ꕞꔤꔫꕩ)',\n  },\n  vi: {\n    name: 'Vietnamese',\n    native: 'Tiếng Việt',\n  },\n  'vi-VN': {\n    name: 'Vietnamese (Vietnam)',\n    native: 'Tiếng Việt (Việt Nam)',\n  },\n  vun: {\n    name: 'Vunjo',\n    native: 'Kyivunjo',\n  },\n  'vun-TZ': {\n    name: 'Vunjo (Tanzania)',\n    native: 'Kyivunjo (Tanzania)',\n  },\n  wae: {\n    name: 'Walser',\n    native: 'Walser',\n  },\n  'wae-CH': {\n    name: 'Walser (Switzerland)',\n    native: 'Walser (Schwiz)',\n  },\n  wo: {\n    name: 'Wolof',\n    native: 'Wolof',\n  },\n  'wo-SN': {\n    name: 'Wolof (Senegal)',\n    native: 'Wolof (Senegaal)',\n  },\n  xog: {\n    name: 'Soga',\n    native: 'Olusoga',\n  },\n  'xog-UG': {\n    name: 'Soga (Uganda)',\n    native: 'Olusoga (Yuganda)',\n  },\n  yav: {\n    name: 'Yangben',\n    native: 'nuasue',\n  },\n  'yav-CM': {\n    name: 'Yangben (Cameroon)',\n    native: 'nuasue (Kemelún)',\n  },\n  yi: {\n    name: 'Yiddish',\n    native: 'ייִדיש',\n  },\n  'yi-001': {\n    name: 'Yiddish (World)',\n    native: 'ייִדיש (וועלט)',\n  },\n  yo: {\n    name: 'Yoruba',\n    native: 'Èdè Yorùbá',\n  },\n  'yo-BJ': {\n    name: 'Yoruba (Benin)',\n    native: 'Èdè Yorùbá (Orílɛ́ède Bɛ̀nɛ̀)',\n  },\n  'yo-NG': {\n    name: 'Yoruba (Nigeria)',\n    native: 'Èdè Yorùbá (Orílẹ́ède Nàìjíríà)',\n  },\n  yue: {\n    name: 'Cantonese',\n    native: '粵語',\n  },\n  'yue-Hans': {\n    name: 'Cantonese (Simplified)',\n    native: '粤语 (简体)',\n  },\n  'yue-Hans-CN': {\n    name: 'Cantonese (Simplified, China)',\n    native: '粤语 (简体，中华人民共和国)',\n  },\n  'yue-Hant': {\n    name: 'Cantonese (Traditional)',\n    native: '粵語 (繁體)',\n  },\n  'yue-Hant-HK': {\n    name: 'Cantonese (Traditional, Hong Kong SAR China)',\n    native: '粵語 (繁體，中華人民共和國香港特別行政區)',\n  },\n  zgh: {\n    name: 'Standard Moroccan Tamazight',\n    native: 'ⵜⴰⵎⴰⵣⵉⵖⵜ',\n  },\n  'zgh-MA': {\n    name: 'Standard Moroccan Tamazight (Morocco)',\n    native: 'ⵜⴰⵎⴰⵣⵉⵖⵜ (ⵍⵎⵖⵔⵉⴱ)',\n  },\n  zh: {\n    name: 'Chinese',\n    native: '中文',\n  },\n  'zh-Hans': {\n    name: 'Chinese (Simplified)',\n    native: '中文（简体）',\n  },\n  'zh-Hans-CN': {\n    name: 'Chinese (Simplified, China)',\n    native: '中文（简体，中国）',\n  },\n  'zh-Hans-HK': {\n    name: 'Chinese (Simplified, Hong Kong SAR China)',\n    native: '中文（简体，中国香港特别行政区）',\n  },\n  'zh-Hans-MO': {\n    name: 'Chinese (Simplified, Macau SAR China)',\n    native: '中文（简体，中国澳门特别行政区）',\n  },\n  'zh-Hans-SG': {\n    name: 'Chinese (Simplified, Singapore)',\n    native: '中文（简体，新加坡）',\n  },\n  'zh-Hant': {\n    name: 'Chinese (Traditional)',\n    native: '中文（繁體）',\n  },\n  'zh-Hant-HK': {\n    name: 'Chinese (Traditional, Hong Kong SAR China)',\n    native: '中文（繁體字，中國香港特別行政區）',\n  },\n  'zh-Hant-MO': {\n    name: 'Chinese (Traditional, Macau SAR China)',\n    native: '中文（繁體字，中國澳門特別行政區）',\n  },\n  'zh-Hant-TW': {\n    name: 'Chinese (Traditional, Taiwan)',\n    native: '中文（繁體，台灣）',\n  },\n  zu: {\n    name: 'Zulu',\n    native: 'isiZulu',\n  },\n  'zu-ZA': {\n    name: 'Zulu (South Africa)',\n    native: 'isiZulu (iNingizimu Afrika)',\n  },\n}\n\nexport const ALL_LANGUAGES = Object.keys(LOCALES).map((locale) => {\n  return {\n    id: locale.replace(/-/g, '_'),\n    title: LOCALES[locale].name,\n    isDefault: !!LOCALES[locale].default,\n  }\n})\n","import {SanityDocument} from '@sanity/client'\nimport {useListeningQuery} from 'sanity-plugin-utils'\nimport {Return} from './types'\n\nexport const postLocalesQuery = `*[_type == \"post\" && _id == $postId][0] {\n  \"slug\": slug.current,\n  \"_translations\": *[_type == \"translation.metadata\" && references(^._id)].translations[].value->{\n    title,\n    slug,\n    language\n  },\n}`\n\nexport type UsePostLocalesQueryOpts = {\n  postId: string\n}\n\nexport const usePostLocalesQuery = (opts: UsePostLocalesQueryOpts): Return<SanityDocument> => {\n  return useListeningQuery<SanityDocument>(postLocalesQuery, {\n    params: {\n      postId: opts.postId,\n    },\n    initialValue: null,\n  })\n}\n","import {useListeningQuery} from 'sanity-plugin-utils'\nimport {Return} from './types'\n\nexport const supportedLanguagesQuery = `*[_type == \"supportedLanguages\"]{id, title}`\n\nexport type SupportedLanguage = {\n  id: string\n  title: string\n}\n\nexport const useSupportedLanguagesQuery = (): Return<SupportedLanguage[]> => {\n  return useListeningQuery<SupportedLanguage[]>(supportedLanguagesQuery, {\n    initialValue: [],\n  })\n}\n","import {ReactNode, createContext, useCallback, useContext, useState} from 'react'\nimport {useSupportedLanguagesQuery, type SupportedLanguage} from '../../../hooks'\n\nexport type UseSupportedLanguages = {\n  error: boolean\n  loading: boolean\n  supportedLanguages: SupportedLanguage[]\n  selectedLocale: string\n  handleLocaleChange: (locale: string) => void\n  handleLocaleReset: () => void\n}\n\nconst SupportedLanguagesContext = createContext<UseSupportedLanguages | null>(null)\n\nexport const useSupportedLanguages = (): UseSupportedLanguages => {\n  const {data, error, loading} = useSupportedLanguagesQuery()\n  const [selectedLocale, setSelectedLocale] = useState('')\n\n  const onLocaleChange = useCallback((locale: string) => {\n    setSelectedLocale(locale)\n  }, [])\n\n  const onLocaleReset = useCallback(() => {\n    setSelectedLocale('')\n  }, [])\n\n  return {\n    error: error as unknown as boolean,\n    loading,\n    selectedLocale,\n    supportedLanguages: data || [],\n    handleLocaleChange: onLocaleChange,\n    handleLocaleReset: onLocaleReset,\n  }\n}\n\ntype SupportedLanguagesContextProviderProps = {\n  children: ReactNode\n}\n\nexport const SupportedLanguagesContextProvider = (\n  props: SupportedLanguagesContextProviderProps,\n) => {\n  const {children} = props\n  const value = useSupportedLanguages()\n\n  return (\n    <SupportedLanguagesContext.Provider value={value}>\n      {children}\n    </SupportedLanguagesContext.Provider>\n  )\n}\n\nexport const useSupportedLanguagesContext = (): UseSupportedLanguages => {\n  const context = useContext(SupportedLanguagesContext)\n  if (context === null) {\n    throw new Error(\n      'useSupportedLanguagesContext must be used within a SupportedLanguagesContextProvider',\n    )\n  }\n  return context\n}\n","import {useContext} from 'react'\nimport {createContext} from 'react'\nimport {LayoutProps} from 'sanity'\n\nimport {SupportedLanguagesContextProvider} from './SupportedLanguages/hooks/useSupportedLanguages'\nimport {DEFAULT_CONFIG} from '../const'\nimport {TranslationPluginConfig} from '../index'\n\ntype PluginConfigContext = Required<TranslationPluginConfig>\n\nconst TranslationServiceContext = createContext<PluginConfigContext>(DEFAULT_CONFIG)\n\nexport function useTranslationServiceContext() {\n  return useContext(TranslationServiceContext)\n}\n\ntype TranslationServiceProviderProps = LayoutProps & {\n  pluginConfig: Required<TranslationPluginConfig>\n}\n\nexport function TranslationServiceProvider(props: TranslationServiceProviderProps) {\n  const {pluginConfig} = props\n  return (\n    <TranslationServiceContext.Provider value={{...pluginConfig}}>\n      <SupportedLanguagesContextProvider>\n        {props.renderDefault(props)}\n      </SupportedLanguagesContextProvider>\n    </TranslationServiceContext.Provider>\n  )\n}\n","import localeEmoji from 'locale-emoji'\nimport {RefreshIcon} from '@sanity/icons'\nimport {Box, Button, Flex, Inline, Select, Stack} from '@sanity/ui'\nimport {ChangeEvent, useCallback} from 'react'\nimport {ObjectInputProps, useFormValue} from 'sanity'\nimport {useSupportedLanguagesContext} from './SupportedLanguages/hooks/useSupportedLanguages'\nimport {LOCALES} from '../const'\nimport {useTranslationServiceContext} from './TranslationServiceProvider'\n\nconst DefaultComponentInput = (props: ObjectInputProps) => {\n  return props.renderDefault(props)\n}\n\nconst RootComponentInput = (props: ObjectInputProps) => {\n  const {\n    supportedLanguages,\n    error,\n    loading,\n    selectedLocale,\n    handleLocaleChange,\n    handleLocaleReset,\n  } = useSupportedLanguagesContext()\n\n  const onLocaleChange = useCallback(\n    (event: ChangeEvent<HTMLSelectElement>) => {\n      const locale = event.target.value\n      handleLocaleChange(locale)\n    },\n    [handleLocaleChange],\n  )\n\n  const selectDisabled = loading || error || !supportedLanguages.length\n\n  return (\n    <Stack space={4}>\n      <Flex justify=\"flex-end\">\n        <Inline space={3}>\n          <Select\n            disabled={selectDisabled}\n            onChange={onLocaleChange}\n            value={selectedLocale}\n            style={{\n              maxWidth: '275px',\n            }}\n          >\n            <option value=\"\">Select a locale</option>\n            {supportedLanguages.map((locale) => {\n              const emoji = localeEmoji(locale.id)\n              const displayName = LOCALES[locale.id.replace('_', '-')].name\n              return (\n                <option key={locale.id} value={locale.id}>\n                  {emoji} {displayName}\n                </option>\n              )\n            })}\n          </Select>\n          <Button\n            text=\"Reset\"\n            icon={RefreshIcon}\n            tone=\"caution\"\n            disabled={selectedLocale === ''}\n            onClick={handleLocaleReset}\n          />\n        </Inline>\n      </Flex>\n      <Box>{props.renderDefault(props)}</Box>\n    </Stack>\n  )\n}\n\nexport const SanityDocumentInputComponent = (props: ObjectInputProps) => {\n  const {schemaTypes} = useTranslationServiceContext()\n  const documentType = useFormValue(['_type']) as string\n  const inputId = props.id\n\n  if (schemaTypes.includes(documentType) && inputId === 'root') {\n    return <RootComponentInput {...props} />\n  }\n  return <DefaultComponentInput {...props} />\n}\n","import {Stack} from '@sanity/ui'\nimport {useEffect, useState} from 'react'\nimport {FormInput, MemberField} from 'sanity'\nimport {useSupportedLanguagesContext} from './SupportedLanguages/hooks/useSupportedLanguages'\n\nexport const LocaleField = (props: any) => {\n  const {members, id} = props\n  const [supportedLanguages, setSupportedLanguages] = useState([])\n  const {supportedLanguages: supportedLanguageDocuments, selectedLocale} =\n    useSupportedLanguagesContext()\n\n  useEffect(() => {\n    if (supportedLanguageDocuments.length) {\n      const result =\n        members &&\n        members.filter((member) => {\n          return supportedLanguageDocuments.some((d) => {\n            return member.name === d.id\n          })\n        })\n      return setSupportedLanguages(result)\n    }\n  }, [members, supportedLanguageDocuments])\n\n  const supportedLanguageFields = !selectedLocale\n    ? supportedLanguages\n    : supportedLanguages.filter((languageField) => {\n        return languageField.key === `field-${selectedLocale}`\n      })\n\n  return (\n    <Stack space={2}>\n      {supportedLanguageFields?.map((language: any) => {\n        if (id === 'localeTitle') {\n          return (\n            <MemberField\n              {...props}\n              key={language.key}\n              member={language}\n              renderInput={() => <FormInput {...props} absolutePath={language.field.path} />}\n              renderField={props.renderField}\n              renderItem={props.renderItem}\n              renderPreview={props.renderPreview}\n            />\n          )\n        }\n        return (\n          <MemberField\n            {...props}\n            key={language.key}\n            member={language}\n            renderInput={props.renderInput}\n            renderField={props.renderField}\n            renderItem={props.renderItem}\n            renderPreview={props.renderPreview}\n          />\n        )\n      })}\n    </Stack>\n  )\n}\n","import {FieldProps, useClient, useFormValue} from 'sanity'\nimport {Stack, Card, Text} from '@sanity/ui'\nimport {useEffect, useState} from 'react'\nimport {useTranslationServiceContext} from './TranslationServiceProvider'\n\nexport const DefaultLanguage = (props: FieldProps) => {\n  const {apiVersion} = useTranslationServiceContext()\n  const client = useClient({apiVersion})\n  const docId = useFormValue(['_id']) as string\n  const isDefaultLanguage = useFormValue(['default']) as boolean\n  const [doc, setDoc] = useState<any>()\n\n  useEffect(() => {\n    let isMounted = true\n\n    const fetchDocument = async () => {\n      const id = docId.replace(/^drafts\\./, '')\n      const params = {\n        type: 'supportedLanguages',\n        draft: `drafts.${id}`,\n        default: true,\n      }\n\n      const query = `*[!(_id in [$draft]) && _type == $type && default == $default][0]`\n      return client.fetch(query, params)\n    }\n\n    fetchDocument()\n      .then((document) => isMounted && setDoc(document))\n      .catch((error) => console.error('Error fetching document:', error))\n\n    return () => {\n      isMounted = false\n    }\n  }, [client, docId])\n\n  return (\n    <Stack space={2}>\n      <div>{props.renderDefault(props)}</div>\n      <Card tone=\"caution\" padding={2} radius={2}>\n        <Text size={1} muted>\n          {isDefaultLanguage\n            ? 'This is the default language'\n            : `The default language is set as ${doc?.id}`}\n        </Text>\n      </Card>\n    </Stack>\n  )\n}\n","import localeEmoji from 'locale-emoji'\nimport {TranslateIcon, TransferIcon, CloseCircleIcon} from '@sanity/icons'\nimport {ChangeEvent, useCallback, useState} from 'react'\nimport {DocumentActionDescription, DocumentActionProps, useClient} from 'sanity'\nimport {Flex, Inline, Button, Stack, Select, Text, Badge, useToast} from '@sanity/ui'\nimport {LOCALES} from '../const'\nimport {usePostLocalesQuery} from '../hooks/usePostLocalesQuery'\nimport {useTranslationServiceContext} from '../components'\n\ntype ModalFooterProps = {\n  onClose: () => void\n  onTranslate: () => void\n  disabled?: boolean\n}\n\nconst ModalFooter = (props: ModalFooterProps) => {\n  const {onClose, onTranslate, disabled = false} = props\n  return (\n    <Flex width=\"100%\" justify=\"flex-end\">\n      <Inline space={2}>\n        <Button icon={CloseCircleIcon} onClick={onClose} text=\"Cancel\" tone=\"critical\" />\n        <Button\n          icon={TransferIcon}\n          onClick={onTranslate}\n          text=\"Translate\"\n          tone=\"primary\"\n          disabled={disabled}\n        />\n      </Inline>\n    </Flex>\n  )\n}\n\ntype ModalContentProps = {\n  locales: string[]\n  disabled?: boolean\n  handleLocaleChange: (event: ChangeEvent<HTMLSelectElement>) => void\n}\n\nconst ModalContent = (props: ModalContentProps) => {\n  const {locales, disabled = false, handleLocaleChange} = props\n  return (\n    <Stack space={4}>\n      <Stack space={3}>\n        <Text muted size={1}>\n          This document has already been translated for the following locales:\n        </Text>\n        <Inline space={2}>\n          {locales.map((locale) => {\n            return (\n              <Badge key={locale} tone=\"primary\">\n                {locale}\n              </Badge>\n            )\n          })}\n        </Inline>\n      </Stack>\n      <Stack space={3}>\n        <Stack space={2}>\n          <Text size={1} weight=\"semibold\">\n            Select Locale\n          </Text>\n          <Text size={1} muted>\n            Choose which locale you wish to translate this document to\n          </Text>\n        </Stack>\n        <Select disabled={disabled} onChange={handleLocaleChange}>\n          <option value=\"\">Select a locale</option>\n          {Object.keys(LOCALES)\n            .filter((locale) => !locales.includes(locale))\n            .map((locale) => {\n              const emoji = localeEmoji(locale)\n              return (\n                <option key={locale} value={locale}>\n                  {emoji} {LOCALES[locale].name}\n                </option>\n              )\n            })}\n        </Select>\n      </Stack>\n    </Stack>\n  )\n}\n\nexport const TranslationServiceAction = (props: DocumentActionProps): DocumentActionDescription => {\n  const {apiVersion} = useTranslationServiceContext()\n  const {id, published, draft} = props\n  const doc = draft || published\n  const toast = useToast()\n  const [modalOpen, setModalOpen] = useState(false)\n  const [locale, setLocale] = useState('')\n  const {data, loading, error} = usePostLocalesQuery({postId: id})\n  const client = useClient({\n    apiVersion,\n  })\n\n  const onClose = useCallback(() => {\n    setModalOpen(false)\n  }, [])\n\n  const onLocaleChange = useCallback((event: ChangeEvent<HTMLSelectElement>) => {\n    const {value} = event.target\n    const formattedLocale = value.replace('-', '_')\n    setLocale(formattedLocale)\n  }, [])\n\n  const sendTranslation = (value: string) => {\n    return fetch('http://localhost:3000/translate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        post: doc,\n        locale: value,\n      }),\n    })\n  }\n\n  const onTranslate = async () => {\n    try {\n      await client\n        .patch(doc!._id)\n        .set({\n          translationProcessing: true,\n        })\n        .commit()\n      sendTranslation(locale)\n      onClose()\n      toast.push({\n        closable: true,\n        status: 'success',\n        title: 'Translation Started!',\n        description: 'Your document is being translated. You will be notified when it is complete.',\n      })\n    } catch (err) {\n      toast.push({\n        closable: true,\n        status: 'error',\n        title: 'Error',\n        description: 'There was an error translating this document. Please try again.',\n      })\n    }\n  }\n\n  const disabled = !data || loading || (doc?.translationProcessing as boolean)\n  const locales = data?._translations?.map((t: Record<string, string>) => t.language) || []\n\n  return {\n    disabled,\n    icon: TranslateIcon,\n    label: 'Translate',\n    tone: 'primary',\n    onHandle: () => {\n      setModalOpen(true)\n    },\n    dialog: modalOpen && {\n      type: 'dialog',\n      header: 'Translate Document',\n      content: (\n        <ModalContent locales={locales} handleLocaleChange={onLocaleChange} disabled={!!error} />\n      ),\n      footer: (\n        <ModalFooter onClose={onClose} onTranslate={onTranslate} disabled={!!error || !locale} />\n      ),\n      showCloseButton: true,\n      onClose: onClose,\n    },\n  }\n}\n","import {defineType} from 'sanity'\nimport {LocaleField} from '../components/LocaleField'\nimport {ALL_LANGUAGES} from '../const'\n\nexport default defineType({\n  title: 'Localized block content',\n  name: 'localeBlockContent',\n  type: 'object',\n  components: {\n    input: LocaleField,\n  },\n  fields: ALL_LANGUAGES.map((lang) => ({\n    title: lang.title,\n    name: lang.id,\n    type: 'array',\n    of: [{title: 'content', type: 'block'}],\n  })),\n})\n","import {defineType} from 'sanity'\nimport {LocaleField} from '../components/LocaleField'\nimport {ALL_LANGUAGES} from '../const'\n\nexport default defineType({\n  title: 'Localized string',\n  name: 'localeTitle',\n  type: 'object',\n  components: {\n    input: LocaleField,\n  },\n  fields: ALL_LANGUAGES.map((lang) => ({\n    title: lang.title,\n    name: lang.id,\n    type: 'string',\n  })),\n})\n","import {defineField, defineType} from 'sanity'\nimport {TranslateIcon} from '@sanity/icons'\nimport {DefaultLanguage} from '../components'\n\nexport default defineType({\n  name: 'supportedLanguages',\n  title: 'Languages',\n  type: 'document',\n  icon: TranslateIcon,\n  fields: [\n    defineField({\n      name: 'id',\n      title: 'Id',\n      type: 'string',\n    }),\n    defineField({\n      name: 'title',\n      title: 'Title',\n      type: 'string',\n    }),\n    defineField({\n      name: 'default',\n      title: 'Default',\n      type: 'boolean',\n      readOnly: true,\n      components: {\n        field: DefaultLanguage,\n      },\n    }),\n  ],\n  preview: {\n    select: {\n      title: 'id',\n      description: 'title',\n    },\n  },\n})\n","import localeBlockContent from './localeBlockContent'\nimport localeTitle from './localeTitle'\nimport supportedLanguages from './supportedLanguages'\n\nexport const schemaTypes = [localeTitle, localeBlockContent, supportedLanguages]\n","import {definePlugin} from 'sanity'\nimport {DEFAULT_CONFIG} from './const'\nimport {SanityDocumentInputComponent, TranslationServiceProvider} from './components'\nimport {TranslationServiceAction} from './actions'\nimport {schemaTypes} from './schemas'\n\nexport type TranslationPluginConfig = {\n  apiKey: string\n  apiVersion?: string\n  schemaTypes: string[]\n}\n\n/**\n * Usage in `sanity.config.ts` (or .js)\n *\n * ```ts\n * import {defineConfig} from 'sanity'\n * import {myPlugin} from 'sanity-plugin-translation'\n *\n * export default defineConfig({\n *   // ...\n *   plugins: [myPlugin()],\n * })\n * ```\n */\nexport const sanityPluginTranslation = definePlugin<TranslationPluginConfig | void>(\n  (\n    config = {\n      apiKey: '',\n      apiVersion: new Date().toISOString().split('T')[0],\n      schemaTypes: [],\n    },\n  ) => {\n    const pluginConfig = {...DEFAULT_CONFIG, ...config}\n    return {\n      name: 'sanity-plugin-translation',\n      studio: {\n        components: {\n          layout: (props) => TranslationServiceProvider({...props, pluginConfig}),\n        },\n      },\n      document: {\n        actions: (prev, context) => {\n          // @ts-ignore\n          if (schemaTypes.includes(context.schemaType)) {\n            return [...prev, TranslationServiceAction]\n          }\n          return prev\n        },\n      },\n      schema: {\n        types: schemaTypes,\n      },\n      form: {\n        components: {\n          input: SanityDocumentInputComponent,\n        },\n      },\n    }\n  },\n)\n"],"names":["DEFAULT_CONFIG","apiKey","apiVersion","Date","toISOString","split","schemaTypes","LOCALES","name","native","af","agq","ak","am","ar","as","asa","ast","az","bas","be","bem","bez","bg","bm","bn","bo","br","brx","bs","ca","ccp","ce","cgg","chr","ckb","cs","cy","da","dav","de","dje","dsb","dua","dyo","dz","ebu","ee","el","en","default","eo","es","et","eu","ewo","fa","ff","fi","fil","fo","fr","fur","fy","ga","gd","gl","gsw","gu","guz","gv","ha","haw","he","hi","hr","hsb","hu","hy","id","ig","ii","is","it","ja","jgo","jmc","ka","kab","kam","kde","kea","khq","ki","kk","kkj","kl","kln","km","kn","ko","kok","ks","ksb","ksf","ksh","kw","ky","lag","lb","lg","lkt","ln","lo","lrc","lt","lu","luo","luy","lv","mas","mer","mfe","mg","mgh","mgo","mk","ml","mn","mr","ms","mt","mua","my","mzn","naq","nb","nd","nds","ne","nl","nmg","nn","nnh","nus","nyn","om","or","os","pa","pl","ps","pt","qu","rm","rn","ro","rof","ru","rw","rwk","sah","saq","sbp","se","seh","ses","sg","shi","si","sk","sl","smn","sn","so","sq","sr","sv","sw","ta","te","teo","tg","th","ti","to","tr","tt","twq","tzm","ug","uk","ur","uz","vai","vi","vun","wae","wo","xog","yav","yi","yo","yue","zgh","zh","zu","ALL_LANGUAGES","Object","keys","map","locale","replace","title","isDefault","postLocalesQuery","usePostLocalesQuery","opts","useListeningQuery","params","postId","initialValue","supportedLanguagesQuery","useSupportedLanguagesQuery","SupportedLanguagesContext","createContext","useSupportedLanguages","data","error","loading","selectedLocale","setSelectedLocale","useState","onLocaleChange","useCallback","onLocaleReset","supportedLanguages","handleLocaleChange","handleLocaleReset","SupportedLanguagesContextProvider","props","children","value","jsx","Provider","useSupportedLanguagesContext","context","useContext","Error","TranslationServiceContext","useTranslationServiceContext","TranslationServiceProvider","pluginConfig","renderDefault","DefaultComponentInput","RootComponentInput","event","target","selectDisabled","length","jsxs","Stack","space","Flex","justify","Inline","Select","disabled","onChange","style","maxWidth","emoji","localeEmoji","displayName","Button","text","icon","RefreshIcon","tone","onClick","Box","SanityDocumentInputComponent","documentType","useFormValue","inputId","includes","LocaleField","members","setSupportedLanguages","supportedLanguageDocuments","useEffect","result","filter","member","some","d","supportedLanguageFields","languageField","key","concat","language","createElement","MemberField","renderInput","FormInput","absolutePath","field","path","renderField","renderItem","renderPreview","DefaultLanguage","client","useClient","docId","isDefaultLanguage","doc","setDoc","isMounted","fetchDocument","type","draft","query","fetch","then","document","catch","console","Card","padding","radius","Text","size","muted","ModalFooter","onClose","onTranslate","width","CloseCircleIcon","TransferIcon","ModalContent","locales","Badge","weight","TranslationServiceAction","_a","published","toast","useToast","modalOpen","setModalOpen","setLocale","formattedLocale","sendTranslation","method","headers","body","JSON","stringify","post","patch","_id","set","translationProcessing","commit","push","closable","status","description","err","_translations","t","TranslateIcon","label","onHandle","dialog","header","content","footer","showCloseButton","localeBlockContent","defineType","components","input","fields","lang","of","localeTitle","defineField","readOnly","preview","select","sanityPluginTranslation","definePlugin","config","arguments","undefined","studio","layout","actions","prev","schemaType","schema","types","form"],"mappings":"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"}